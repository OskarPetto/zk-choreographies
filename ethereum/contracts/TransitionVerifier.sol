import "./Pairing.sol";

contract TransitionVerifier {

    using Pairing for *;

    uint256 constant SNARK_SCALAR_FIELD = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
    uint256 constant PRIME_Q = 21888242871839275222246405745257275088696311157297823662689037894645226208583;

    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        // []G1Point IC (K in gnark) appears directly in verifyProof
    }

    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }

    function verifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(uint256(3845289953735847253929099421943231986071660127894609049817082701350735179533), uint256(7514982713719362939070853634139513025386122622887002799520043031347889924526));
        vk.beta2 = Pairing.G2Point([uint256(8506663399263818140442212647626193186807748198139921948715444102913027110195), uint256(674341085344369296723413037432728274897141190847251440292228920122885728887)], [uint256(5036965092094192012831282117990807236416077477974906969202606060211571006750), uint256(12401997630736476423745320127932373864388238159385826871900459008224608492434)]);
        vk.gamma2 = Pairing.G2Point([uint256(2577131010664511837663581657404070132024139277460507216757836450808091407987), uint256(16044046280190169849550129753200158298143177325146532723463890313539094421895)], [uint256(14809299434797826113888015534391272791341335370538566979348564163315795442184), uint256(427443525774787334035244656632482714108760917577988667558472865518202976675)]);
        vk.delta2 = Pairing.G2Point([uint256(16530514030950372646079280643315667917401075140462880155600820008072604217262), uint256(16281225109054985645653978542158300936235667365133685123617430169276497864272)], [uint256(3650922751696122536063869852852411963618684542903721754030870160041183491512), uint256(5706008984826414191256417581934899802505098042055047790913546560239070323818)]);
    }


    // accumulate scalarMul(mul_input) into q
    // that is computes sets q = (mul_input[0:2] * mul_input[3]) + q
    function accumulate(
        uint256[3] memory mul_input,
        Pairing.G1Point memory p,
        uint256[4] memory buffer,
        Pairing.G1Point memory q
    ) internal view {
        // computes p = mul_input[0:2] * mul_input[3]
        Pairing.scalar_mul_raw(mul_input, p);

        // point addition inputs
        buffer[0] = q.X;
        buffer[1] = q.Y;
        buffer[2] = p.X;
        buffer[3] = p.Y;

        // q = p + q
        Pairing.plus_raw(buffer, q);
    }

    /*
     * @returns Whether the proof is valid given the hardcoded verifying key
     *          above and the public inputs
     */
    function verifyProof(
        uint256[2] memory a,
        uint256[2][2] memory b,
        uint256[2] memory c,
        uint256[649] calldata input
    ) public view returns (bool r) {

        Proof memory proof;
        proof.A = Pairing.G1Point(a[0], a[1]);
        proof.B = Pairing.G2Point([b[0][0], b[0][1]], [b[1][0], b[1][1]]);
        proof.C = Pairing.G1Point(c[0], c[1]);

        // Make sure that proof.A, B, and C are each less than the prime q
        require(proof.A.X < PRIME_Q, "verifier-aX-gte-prime-q");
        require(proof.A.Y < PRIME_Q, "verifier-aY-gte-prime-q");

        require(proof.B.X[0] < PRIME_Q, "verifier-bX0-gte-prime-q");
        require(proof.B.Y[0] < PRIME_Q, "verifier-bY0-gte-prime-q");

        require(proof.B.X[1] < PRIME_Q, "verifier-bX1-gte-prime-q");
        require(proof.B.Y[1] < PRIME_Q, "verifier-bY1-gte-prime-q");

        require(proof.C.X < PRIME_Q, "verifier-cX-gte-prime-q");
        require(proof.C.Y < PRIME_Q, "verifier-cY-gte-prime-q");

        // Make sure that every input is less than the snark scalar field
        for (uint256 i = 0; i < input.length; i++) {
            require(input[i] < SNARK_SCALAR_FIELD,"verifier-gte-snark-scalar-field");
        }

        VerifyingKey memory vk = verifyingKey();

        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);

        // Buffer reused for addition p1 + p2 to avoid memory allocations
        // [0:2] -> p1.X, p1.Y ; [2:4] -> p2.X, p2.Y
        uint256[4] memory add_input;

        // Buffer reused for multiplication p1 * s
        // [0:2] -> p1.X, p1.Y ; [3] -> s
        uint256[3] memory mul_input;

        // temporary point to avoid extra allocations in accumulate
        Pairing.G1Point memory q = Pairing.G1Point(0, 0);

        vk_x.X = uint256(10012307246940048288066018635918543335382587033536759764323823363965575610114); // vk.K[0].X
        vk_x.Y = uint256(17173611509872697762295060109765200259238673207485568462635137448609585611162); // vk.K[0].Y
        mul_input[0] = uint256(0); // vk.K[1].X
        mul_input[1] = uint256(0); // vk.K[1].Y
        mul_input[2] = input[0];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[1] * input[0]
        mul_input[0] = uint256(0); // vk.K[2].X
        mul_input[1] = uint256(0); // vk.K[2].Y
        mul_input[2] = input[1];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[2] * input[1]
        mul_input[0] = uint256(0); // vk.K[3].X
        mul_input[1] = uint256(0); // vk.K[3].Y
        mul_input[2] = input[2];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[3] * input[2]
        mul_input[0] = uint256(0); // vk.K[4].X
        mul_input[1] = uint256(0); // vk.K[4].Y
        mul_input[2] = input[3];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[4] * input[3]
        mul_input[0] = uint256(0); // vk.K[5].X
        mul_input[1] = uint256(0); // vk.K[5].Y
        mul_input[2] = input[4];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[5] * input[4]
        mul_input[0] = uint256(0); // vk.K[6].X
        mul_input[1] = uint256(0); // vk.K[6].Y
        mul_input[2] = input[5];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[6] * input[5]
        mul_input[0] = uint256(12083191859824663973010942462048362525665848421448122853026370794552093791753); // vk.K[7].X
        mul_input[1] = uint256(17597349102398604206014707120832795215583938662265562906588074440401174939764); // vk.K[7].Y
        mul_input[2] = input[6];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[7] * input[6]
        mul_input[0] = uint256(6814681269836707540734326831945393567539957814984034455406376245989639189596); // vk.K[8].X
        mul_input[1] = uint256(19577409080135356429427986621356039612678884081947537510884486145102281707711); // vk.K[8].Y
        mul_input[2] = input[7];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[8] * input[7]
        mul_input[0] = uint256(11826685770463324169797528741790206725538895212863636284028383052656795377491); // vk.K[9].X
        mul_input[1] = uint256(2827967956454257813514122449729647413932353088350324795330409414504486423948); // vk.K[9].Y
        mul_input[2] = input[8];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[9] * input[8]
        mul_input[0] = uint256(9081905292190844959590870976704810668825043095792042256348609477625248522990); // vk.K[10].X
        mul_input[1] = uint256(2012001251804204617974356322921373592705863192050647088052247048724382062649); // vk.K[10].Y
        mul_input[2] = input[9];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[10] * input[9]
        mul_input[0] = uint256(20122838436902530352402137261084019065676054158816541565309404498170904122107); // vk.K[11].X
        mul_input[1] = uint256(13626478431033915077008015512991231383755678783006768433683304323257509840205); // vk.K[11].Y
        mul_input[2] = input[10];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[11] * input[10]
        mul_input[0] = uint256(9174519736947307737469200223090405347285557919481590626873321288381212538562); // vk.K[12].X
        mul_input[1] = uint256(900770536048936788899014804299740804398395742192754190323646757069140539451); // vk.K[12].Y
        mul_input[2] = input[11];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[12] * input[11]
        mul_input[0] = uint256(15141974615485835209610724969108394414867573980995426260387941425825798516842); // vk.K[13].X
        mul_input[1] = uint256(8708555598625703339751918476546755704013043177463586515688823451771941495957); // vk.K[13].Y
        mul_input[2] = input[12];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[13] * input[12]
        mul_input[0] = uint256(21636710394365782444764595535765732624579998754732943916254076296506955083002); // vk.K[14].X
        mul_input[1] = uint256(7027947498950728223289629199592545100511979394756496036425236548030573227017); // vk.K[14].Y
        mul_input[2] = input[13];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[14] * input[13]
        mul_input[0] = uint256(14531287847191090998887548991899675205888539417646308245111727971619995455890); // vk.K[15].X
        mul_input[1] = uint256(5750676673248638816362756540876872103661377415852754426760103737290549083122); // vk.K[15].Y
        mul_input[2] = input[14];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[15] * input[14]
        mul_input[0] = uint256(5043608235174355729143115208052567601798707745594935533162653083420535903514); // vk.K[16].X
        mul_input[1] = uint256(10340826514831479404677832440608976185096290958261231348306383296660681484730); // vk.K[16].Y
        mul_input[2] = input[15];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[16] * input[15]
        mul_input[0] = uint256(17098425691877733243495883873345741312955689927619503689147699671518284248810); // vk.K[17].X
        mul_input[1] = uint256(2128480452632850693752692557732928508099647975181276449269134200689067173017); // vk.K[17].Y
        mul_input[2] = input[16];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[17] * input[16]
        mul_input[0] = uint256(11069634223828239106849616102993946170929805182235909858939921959663324603936); // vk.K[18].X
        mul_input[1] = uint256(10886320244506015814046047647329284947876142172170531914097954740860079530154); // vk.K[18].Y
        mul_input[2] = input[17];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[18] * input[17]
        mul_input[0] = uint256(7316623780967294130256460238164619766134977649747589935229688495657841558664); // vk.K[19].X
        mul_input[1] = uint256(891889107812308243062694880536006418403006888199994955027937673625425583046); // vk.K[19].Y
        mul_input[2] = input[18];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[19] * input[18]
        mul_input[0] = uint256(17690216192140417285882283854149339955776867214005395941387161972542458788993); // vk.K[20].X
        mul_input[1] = uint256(4722293160464069700384971296376763207936232340542621896841892979412636973806); // vk.K[20].Y
        mul_input[2] = input[19];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[20] * input[19]
        mul_input[0] = uint256(8821577818448926383072368932316578444459754365866607108877183267186850120580); // vk.K[21].X
        mul_input[1] = uint256(9715420373319104813431581091340074371177942736629638105991420653471084390730); // vk.K[21].Y
        mul_input[2] = input[20];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[21] * input[20]
        mul_input[0] = uint256(11197390654296616548878349498468114891942002098425975412757633352925168068836); // vk.K[22].X
        mul_input[1] = uint256(1068321525477892760830585936983322385250713732377647964577859217639904456544); // vk.K[22].Y
        mul_input[2] = input[21];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[22] * input[21]
        mul_input[0] = uint256(14920325618734406136660105042292238851666725531521730001494053629300962039800); // vk.K[23].X
        mul_input[1] = uint256(2783819985829529672332977149307818776001722195972649227482461814718088567979); // vk.K[23].Y
        mul_input[2] = input[22];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[23] * input[22]
        mul_input[0] = uint256(16016606575067466799711766107163952000149692069988400123783401502752651101695); // vk.K[24].X
        mul_input[1] = uint256(21388455412655579087491229768225223846728572042522627886895253592830321538527); // vk.K[24].Y
        mul_input[2] = input[23];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[24] * input[23]
        mul_input[0] = uint256(5561377106731105774511906633695475637182513873228412650473610880277035992505); // vk.K[25].X
        mul_input[1] = uint256(6429510730031546717622775168650816944010236402898163399362269286256911314278); // vk.K[25].Y
        mul_input[2] = input[24];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[25] * input[24]
        mul_input[0] = uint256(15148729293041886692461900280408685435706188550905929172402633485312848769174); // vk.K[26].X
        mul_input[1] = uint256(16142049724915750318766813710832894271242837640819529013507578307567859880674); // vk.K[26].Y
        mul_input[2] = input[25];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[26] * input[25]
        mul_input[0] = uint256(1452613440607301724631875968187993968802032148965929637559173122262903562260); // vk.K[27].X
        mul_input[1] = uint256(11934917539568900668010013539607495678308170260612475935919835479240742554054); // vk.K[27].Y
        mul_input[2] = input[26];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[27] * input[26]
        mul_input[0] = uint256(5567581550004286981793290629080089347978575343559767821330172337478152125004); // vk.K[28].X
        mul_input[1] = uint256(1402585391062564740848665592259888090583782793443618774249135748467947110105); // vk.K[28].Y
        mul_input[2] = input[27];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[28] * input[27]
        mul_input[0] = uint256(17314413453061766852901911127077789254714947951048293655287544791234192171083); // vk.K[29].X
        mul_input[1] = uint256(20869137007728487779975598867250490586166559880858126651096178388150743897329); // vk.K[29].Y
        mul_input[2] = input[28];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[29] * input[28]
        mul_input[0] = uint256(19165208338011098836987517807152792998553906964254634967519817723132394484143); // vk.K[30].X
        mul_input[1] = uint256(18139064012681070696221989217905704081493240008094217974148450977415342839282); // vk.K[30].Y
        mul_input[2] = input[29];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[30] * input[29]
        mul_input[0] = uint256(1722053973527014127958720122148837130831102315454980522108171737840045890524); // vk.K[31].X
        mul_input[1] = uint256(17848927656071959540026133437597376483589580187337135740703661310119993798343); // vk.K[31].Y
        mul_input[2] = input[30];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[31] * input[30]
        mul_input[0] = uint256(3866767771660511944427027047713611715812984019836976484402482813712322611471); // vk.K[32].X
        mul_input[1] = uint256(11527208281358747352673305924549404672548086500333332891078310885802763402824); // vk.K[32].Y
        mul_input[2] = input[31];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[32] * input[31]
        mul_input[0] = uint256(2687648727632205700168689857889525331140450624659059808370335722510806805395); // vk.K[33].X
        mul_input[1] = uint256(3122067911375676567582051809510197515550723249821653770406298647277929264379); // vk.K[33].Y
        mul_input[2] = input[32];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[33] * input[32]
        mul_input[0] = uint256(17013034784959371983870219108107694824916371026348150023991902143809771981568); // vk.K[34].X
        mul_input[1] = uint256(2075907713122455864002206447165294964117914938803992870503676908220079366147); // vk.K[34].Y
        mul_input[2] = input[33];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[34] * input[33]
        mul_input[0] = uint256(20941628297908193819393242709131958478996445218874952423866678768686743133947); // vk.K[35].X
        mul_input[1] = uint256(16383239836743084119154228270592995458235050589872361890642271533412238476126); // vk.K[35].Y
        mul_input[2] = input[34];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[35] * input[34]
        mul_input[0] = uint256(10918114697071301420266984551438754539715050898252778009753066900202362776368); // vk.K[36].X
        mul_input[1] = uint256(15510855538148329372539426022636204796491876523720535656185342722032616809393); // vk.K[36].Y
        mul_input[2] = input[35];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[36] * input[35]
        mul_input[0] = uint256(8477299644344925439042880645456918480164341524642463731984883941661090341882); // vk.K[37].X
        mul_input[1] = uint256(3415747399581520323813815706812387472254846540130728884267635597063025886730); // vk.K[37].Y
        mul_input[2] = input[36];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[37] * input[36]
        mul_input[0] = uint256(12369079735925341566820259716575285361559467813005450197726614680724995530002); // vk.K[38].X
        mul_input[1] = uint256(3288594316229609196885008934673092113350464177406371383365863116105375158466); // vk.K[38].Y
        mul_input[2] = input[37];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[38] * input[37]
        mul_input[0] = uint256(13012374426516775227179568505090058349293825866118677496285005667197655795010); // vk.K[39].X
        mul_input[1] = uint256(15140470694156338090551132057265621252617345509259890197336348687694333659182); // vk.K[39].Y
        mul_input[2] = input[38];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[39] * input[38]
        mul_input[0] = uint256(11636571036964264817625035741554424697282003992390175005932380837398259637439); // vk.K[40].X
        mul_input[1] = uint256(11780943514926824714057499505998510542370345540935183830096048142752522410370); // vk.K[40].Y
        mul_input[2] = input[39];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[40] * input[39]
        mul_input[0] = uint256(16451905227527825443367957369415700148271437018645973417814293493689980521723); // vk.K[41].X
        mul_input[1] = uint256(6497175053189267085714470016474287945248448500009386997843737587261258563173); // vk.K[41].Y
        mul_input[2] = input[40];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[41] * input[40]
        mul_input[0] = uint256(21002437279792426488090250248478741920947828502421181908132680622600038005234); // vk.K[42].X
        mul_input[1] = uint256(13828653021070791817234025420702765674321044280066295894729608966622473085598); // vk.K[42].Y
        mul_input[2] = input[41];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[42] * input[41]
        mul_input[0] = uint256(18028366738771692988258148454983315154735917456663862008558629853007088878213); // vk.K[43].X
        mul_input[1] = uint256(11166010925833638091257786607489488277888815793264090004284001845451855919917); // vk.K[43].Y
        mul_input[2] = input[42];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[43] * input[42]
        mul_input[0] = uint256(8754428104059582618204520368948068772368102145091476166261838328906683221503); // vk.K[44].X
        mul_input[1] = uint256(6180717861906416937945433654279032447246420611247677846937404189511263322698); // vk.K[44].Y
        mul_input[2] = input[43];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[44] * input[43]
        mul_input[0] = uint256(13243314497531700093938098269280600405650900424812881184575439844658628995575); // vk.K[45].X
        mul_input[1] = uint256(2158320388478973097971060692939592815037955893019466941645950904760641928010); // vk.K[45].Y
        mul_input[2] = input[44];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[45] * input[44]
        mul_input[0] = uint256(18856045286470896710845502786136890471365215053931997144725896473080780177721); // vk.K[46].X
        mul_input[1] = uint256(19477424373234960491854403360057093307559513132318896562477795068493015381794); // vk.K[46].Y
        mul_input[2] = input[45];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[46] * input[45]
        mul_input[0] = uint256(4456599646798187372491511625705114005613247328251102386373371162501431416222); // vk.K[47].X
        mul_input[1] = uint256(8322728368964867827360654440619772431073810435397710037930858406082090169468); // vk.K[47].Y
        mul_input[2] = input[46];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[47] * input[46]
        mul_input[0] = uint256(5765809012760328957563014239987723233952932015575687037871394415288313693768); // vk.K[48].X
        mul_input[1] = uint256(13672705697595915690370725276428392346230227871575309208082960827388354463169); // vk.K[48].Y
        mul_input[2] = input[47];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[48] * input[47]
        mul_input[0] = uint256(7728766766860905477698690285858879461481525968327546816764677421226402711371); // vk.K[49].X
        mul_input[1] = uint256(167483988857249435060870871807604325456020781406473096967412503118900847539); // vk.K[49].Y
        mul_input[2] = input[48];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[49] * input[48]
        mul_input[0] = uint256(21462778070218468951978674543887340199424328849246575642178726359175134187132); // vk.K[50].X
        mul_input[1] = uint256(8603528567812423051303506769214276061060449885408504606189390031492356642363); // vk.K[50].Y
        mul_input[2] = input[49];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[50] * input[49]
        mul_input[0] = uint256(4105488740258265323921804950979310424979900049961857814298972415375438545139); // vk.K[51].X
        mul_input[1] = uint256(16510807268305147172727704846696583191962716924323378320484425506107933699655); // vk.K[51].Y
        mul_input[2] = input[50];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[51] * input[50]
        mul_input[0] = uint256(5458910194305197529056416720447965415487783101735436141767931323358621445165); // vk.K[52].X
        mul_input[1] = uint256(18789962834267490593395304031354267741271297679572198279528840987272327295718); // vk.K[52].Y
        mul_input[2] = input[51];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[52] * input[51]
        mul_input[0] = uint256(5430871175280241526243271418166412420138347262479205263319801913923419544571); // vk.K[53].X
        mul_input[1] = uint256(14785949211827054291768470966914558213712945572436632556299386163828092449402); // vk.K[53].Y
        mul_input[2] = input[52];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[53] * input[52]
        mul_input[0] = uint256(12079833254962115737979836083191239194482788249239096689636338090387552537839); // vk.K[54].X
        mul_input[1] = uint256(9050848688783290955318418450194026989459526080427261075366208063608817861754); // vk.K[54].Y
        mul_input[2] = input[53];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[54] * input[53]
        mul_input[0] = uint256(11811521423278901974822559146787190263735500180995597028014963569871302080414); // vk.K[55].X
        mul_input[1] = uint256(15425924847687262195917826199443088988120091762328155698446776368799835198213); // vk.K[55].Y
        mul_input[2] = input[54];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[55] * input[54]
        mul_input[0] = uint256(3792782241039228211429195316557010330842619513306951307445890373996753395572); // vk.K[56].X
        mul_input[1] = uint256(7860903408671445062591786150698162517119804196913257399306877172186037290467); // vk.K[56].Y
        mul_input[2] = input[55];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[56] * input[55]
        mul_input[0] = uint256(4537567595547200967679967183717210888477296720671703560594578810772684301213); // vk.K[57].X
        mul_input[1] = uint256(9346319438469094246066439701789623083974308732915012111091516923582473828682); // vk.K[57].Y
        mul_input[2] = input[56];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[57] * input[56]
        mul_input[0] = uint256(15190201994954303907499894831010138105039091006592981457084230100894436548076); // vk.K[58].X
        mul_input[1] = uint256(20080204608161896641758488291368143037486329722961921221202114840556937628016); // vk.K[58].Y
        mul_input[2] = input[57];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[58] * input[57]
        mul_input[0] = uint256(12289358639338782616136705935392539989275726284607927468047693000965898615312); // vk.K[59].X
        mul_input[1] = uint256(19791896515050363618581707574056617654288257481313047030276860763728755250207); // vk.K[59].Y
        mul_input[2] = input[58];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[59] * input[58]
        mul_input[0] = uint256(16546906470262462060821549052508024593234234245737141015961510370432276908972); // vk.K[60].X
        mul_input[1] = uint256(10815913615005146763825893061220467173030000090730116977028655167550097123781); // vk.K[60].Y
        mul_input[2] = input[59];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[60] * input[59]
        mul_input[0] = uint256(13121431579057419604544107079368244034098444802624192783219150316710686263501); // vk.K[61].X
        mul_input[1] = uint256(11295221194040865316191666329341183573661195466392196331442718759463993220530); // vk.K[61].Y
        mul_input[2] = input[60];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[61] * input[60]
        mul_input[0] = uint256(21765423508226490437071916429097269705128013841663621261800725287722259545107); // vk.K[62].X
        mul_input[1] = uint256(16601534060654737578490955080746185502238317196691397657605519364753239772386); // vk.K[62].Y
        mul_input[2] = input[61];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[62] * input[61]
        mul_input[0] = uint256(7396476565337404998789643469721508579088536134807677298579697071857831765281); // vk.K[63].X
        mul_input[1] = uint256(16938511650867319599979970422833621886649149982179410697673855014577548530481); // vk.K[63].Y
        mul_input[2] = input[62];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[63] * input[62]
        mul_input[0] = uint256(6039473702131585060336775938837183212804553907714284520752806791217780115977); // vk.K[64].X
        mul_input[1] = uint256(17183199376173209353997814188109030850622598103609422499281513612256874554132); // vk.K[64].Y
        mul_input[2] = input[63];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[64] * input[63]
        mul_input[0] = uint256(135733010729145153821821195668573022625548743938493283520094331245968141306); // vk.K[65].X
        mul_input[1] = uint256(2831287974425561616932889067762472782954213007417169744069245848144194937694); // vk.K[65].Y
        mul_input[2] = input[64];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[65] * input[64]
        mul_input[0] = uint256(6606167393275779946823944360904528981479042595239736879330484408565133687224); // vk.K[66].X
        mul_input[1] = uint256(7451983088097971845354777961290096273834420482538902672676441537601522731947); // vk.K[66].Y
        mul_input[2] = input[65];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[66] * input[65]
        mul_input[0] = uint256(15120991487026494661566805399603095682607872345517957302492976984920161799311); // vk.K[67].X
        mul_input[1] = uint256(12705293298522593705916365224352466536846833759910666991765671592127801276202); // vk.K[67].Y
        mul_input[2] = input[66];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[67] * input[66]
        mul_input[0] = uint256(3194441620004173216532843018584616543972430257287884413857891093190068942509); // vk.K[68].X
        mul_input[1] = uint256(13837123049011397278021621462096655924383074221970602614097332778002739737446); // vk.K[68].Y
        mul_input[2] = input[67];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[68] * input[67]
        mul_input[0] = uint256(12162007508384834108280946203602060273551051358179430650673121518131247357685); // vk.K[69].X
        mul_input[1] = uint256(19181156011763058976632707857932683202588580454329861208726670463154227458265); // vk.K[69].Y
        mul_input[2] = input[68];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[69] * input[68]
        mul_input[0] = uint256(18595382906907146523101686033528116217541453940321906734429254269600107750333); // vk.K[70].X
        mul_input[1] = uint256(7561537432561880210781076516937191295967601484785299698392888355662471315540); // vk.K[70].Y
        mul_input[2] = input[69];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[70] * input[69]
        mul_input[0] = uint256(14144475343211923624960773899401130708815352828740878896460966553252864267571); // vk.K[71].X
        mul_input[1] = uint256(4888521325399522200132101468277465590356669958671858948848645142857476402240); // vk.K[71].Y
        mul_input[2] = input[70];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[71] * input[70]
        mul_input[0] = uint256(1989732292188662389450457277840373299400393956762746481962878659822239472400); // vk.K[72].X
        mul_input[1] = uint256(4145251229807289667748049582511050144817572478719680444285728618590447703407); // vk.K[72].Y
        mul_input[2] = input[71];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[72] * input[71]
        mul_input[0] = uint256(9575846758271244944704446743617925684351975488135959859000350038358426642675); // vk.K[73].X
        mul_input[1] = uint256(12855377944634658932011445881511669980962956488331767492590041474005655873304); // vk.K[73].Y
        mul_input[2] = input[72];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[73] * input[72]
        mul_input[0] = uint256(17524695944257824107047244623415624317532000194713469920506103548029279209358); // vk.K[74].X
        mul_input[1] = uint256(10474305711082739045183339111373739592773225223395873081032166326380514434700); // vk.K[74].Y
        mul_input[2] = input[73];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[74] * input[73]
        mul_input[0] = uint256(13916753684171109664063070298586473122495305198572347379391176198053001041082); // vk.K[75].X
        mul_input[1] = uint256(591039521461581546856477894683934580725511721474381202647908470551826972643); // vk.K[75].Y
        mul_input[2] = input[74];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[75] * input[74]
        mul_input[0] = uint256(13465576353969788805617151127423410848704686985924181107132322356498824758124); // vk.K[76].X
        mul_input[1] = uint256(13052232015365820763896613023468024872653923285463553453697572396267216069160); // vk.K[76].Y
        mul_input[2] = input[75];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[76] * input[75]
        mul_input[0] = uint256(1052728777320728842232396437045453796476915511131281954628942860298079770688); // vk.K[77].X
        mul_input[1] = uint256(17053816480650596949637634641909553755584557992118797997566798987480777680438); // vk.K[77].Y
        mul_input[2] = input[76];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[77] * input[76]
        mul_input[0] = uint256(2219854532452855527933090297298538340057506521276320246716154283344768413800); // vk.K[78].X
        mul_input[1] = uint256(14939314890358569580453029586194015869655159642004874354238031272256402991727); // vk.K[78].Y
        mul_input[2] = input[77];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[78] * input[77]
        mul_input[0] = uint256(10163156530345358198985501438536887806483370725996915670197434471821207321103); // vk.K[79].X
        mul_input[1] = uint256(4972237547735987151764206214966543985313125247033522043596275415845766927230); // vk.K[79].Y
        mul_input[2] = input[78];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[79] * input[78]
        mul_input[0] = uint256(5987863911883434872892496488064414895915253952872921801481415634690821318199); // vk.K[80].X
        mul_input[1] = uint256(11744866299847461747893135911393463865260557091964314817707227955811868685865); // vk.K[80].Y
        mul_input[2] = input[79];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[80] * input[79]
        mul_input[0] = uint256(21802550086130133635150501484071816993123552755095904296164569572091778858935); // vk.K[81].X
        mul_input[1] = uint256(16667508463184167282973265350660437854543140112208202767318213744293427220501); // vk.K[81].Y
        mul_input[2] = input[80];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[81] * input[80]
        mul_input[0] = uint256(14355422051076533435081566311042307176868984711461113333126277438326728822153); // vk.K[82].X
        mul_input[1] = uint256(17355078139265856278499052567282710476318142565209233924795174928008950804949); // vk.K[82].Y
        mul_input[2] = input[81];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[82] * input[81]
        mul_input[0] = uint256(3031909553419325557568598498407507062827562110442161319606002942111940289017); // vk.K[83].X
        mul_input[1] = uint256(11536357659867995197397892728455834911969876795367243405016033819003020911387); // vk.K[83].Y
        mul_input[2] = input[82];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[83] * input[82]
        mul_input[0] = uint256(20768409106816518843962016271237671453636517020196348320785273745220788621394); // vk.K[84].X
        mul_input[1] = uint256(20093578702313758712601714268463210463639719225201831682108732085939079756833); // vk.K[84].Y
        mul_input[2] = input[83];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[84] * input[83]
        mul_input[0] = uint256(14465622812296305872746271866663294201487544760603773140588896701998662273049); // vk.K[85].X
        mul_input[1] = uint256(11072791765064656091293401746867792946200546843999925917110085390879309851365); // vk.K[85].Y
        mul_input[2] = input[84];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[85] * input[84]
        mul_input[0] = uint256(6819296008233457532093010803313676283837730759340200305930077653963851635887); // vk.K[86].X
        mul_input[1] = uint256(10242171430181264041314472051077430939848024883041628231178371347692817118598); // vk.K[86].Y
        mul_input[2] = input[85];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[86] * input[85]
        mul_input[0] = uint256(17552449661209839829656458327885652958235982362119586892872700550066975119733); // vk.K[87].X
        mul_input[1] = uint256(1151611529718170520162507544513300938857558714971700837174138935006904036837); // vk.K[87].Y
        mul_input[2] = input[86];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[87] * input[86]
        mul_input[0] = uint256(20908377822562511498738914758786773682006733143375712564727796196394096426942); // vk.K[88].X
        mul_input[1] = uint256(10416931229854847531924205332153109848633068719310956127389502999405303345400); // vk.K[88].Y
        mul_input[2] = input[87];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[88] * input[87]
        mul_input[0] = uint256(15670887015010491213626963073315793981183907576190070664506397539838474816058); // vk.K[89].X
        mul_input[1] = uint256(3578441654683430189625502954330843922880857724103031233246281396328467982032); // vk.K[89].Y
        mul_input[2] = input[88];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[89] * input[88]
        mul_input[0] = uint256(7604599128866588142367369996274016741391034442776313419019306619921904976309); // vk.K[90].X
        mul_input[1] = uint256(10277603333963092992438370258119233876260623414296207534627017476301751172157); // vk.K[90].Y
        mul_input[2] = input[89];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[90] * input[89]
        mul_input[0] = uint256(6201966026048391468426319330638023949952783613431606756235593686885217478800); // vk.K[91].X
        mul_input[1] = uint256(13391074066939229393070498526232950374911046911890084292013905855012167559597); // vk.K[91].Y
        mul_input[2] = input[90];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[91] * input[90]
        mul_input[0] = uint256(1534995857091541187842336104482342462051061997540833136797291500081588979358); // vk.K[92].X
        mul_input[1] = uint256(20115822188362678963146113730025568383962289637826455199100896956594474594990); // vk.K[92].Y
        mul_input[2] = input[91];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[92] * input[91]
        mul_input[0] = uint256(9510269396699003802391631160862903173276017909702684538115140389140001301613); // vk.K[93].X
        mul_input[1] = uint256(6890630780734040356834313080662997500765245489972562542690704236866583985958); // vk.K[93].Y
        mul_input[2] = input[92];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[93] * input[92]
        mul_input[0] = uint256(18083574394957473943785081333393504328341958004421209596552236290156519285873); // vk.K[94].X
        mul_input[1] = uint256(11336566869029242636932748793787987656553538931184710048643285211157970762505); // vk.K[94].Y
        mul_input[2] = input[93];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[94] * input[93]
        mul_input[0] = uint256(18424647426003857040843212661688814305508510336469200826021623372787815281880); // vk.K[95].X
        mul_input[1] = uint256(8509413354853423144683706953989404539333089152454189269243022153468849725483); // vk.K[95].Y
        mul_input[2] = input[94];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[95] * input[94]
        mul_input[0] = uint256(11878860249528979021295983948283990437698627271295258885830366718533745544776); // vk.K[96].X
        mul_input[1] = uint256(4685189893824397782500685315937153752295563965860367429831369942925665752122); // vk.K[96].Y
        mul_input[2] = input[95];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[96] * input[95]
        mul_input[0] = uint256(11565066287992007430615023094138005972826486880672200483012129740212548532648); // vk.K[97].X
        mul_input[1] = uint256(19169006454567873584190207746478330038952860791271330333333316507121815325838); // vk.K[97].Y
        mul_input[2] = input[96];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[97] * input[96]
        mul_input[0] = uint256(21238503446901192509883150256347469147741863236653545122685720164375637282171); // vk.K[98].X
        mul_input[1] = uint256(11762654233994666824127471829265600875187860267003983190650776946233034915437); // vk.K[98].Y
        mul_input[2] = input[97];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[98] * input[97]
        mul_input[0] = uint256(19018596339013154386062743696493661245409390679075946349769582316527259157626); // vk.K[99].X
        mul_input[1] = uint256(15398767701347529343581216436098461976012988366404710955756820678863401644565); // vk.K[99].Y
        mul_input[2] = input[98];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[99] * input[98]
        mul_input[0] = uint256(10901318818308567704646510546698576677091011701128907517737493431583507091919); // vk.K[100].X
        mul_input[1] = uint256(11443461600067268000007118311992165099975617578569065281818352043783641093751); // vk.K[100].Y
        mul_input[2] = input[99];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[100] * input[99]
        mul_input[0] = uint256(10556487448264039391433945269490136560768755699963974584160454420330853295528); // vk.K[101].X
        mul_input[1] = uint256(4701031863291488680034953997369194057076003456788118179574550740826823878809); // vk.K[101].Y
        mul_input[2] = input[100];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[101] * input[100]
        mul_input[0] = uint256(9973899212934902370496916769807792882507767729624679461508753404903416917899); // vk.K[102].X
        mul_input[1] = uint256(12110514707899924360981175503242511294116968767681261640010876968601668593174); // vk.K[102].Y
        mul_input[2] = input[101];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[102] * input[101]
        mul_input[0] = uint256(1690187712571821685312724230452124511472191921446075609855121437567751950682); // vk.K[103].X
        mul_input[1] = uint256(19111519709743187080046631690811556889787053160814346225246274917683872695146); // vk.K[103].Y
        mul_input[2] = input[102];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[103] * input[102]
        mul_input[0] = uint256(12917654062821677746999696639762781803050387400986439315606232049455942738291); // vk.K[104].X
        mul_input[1] = uint256(3744941985060916456446868387546588400569933002131256428423795526513038808296); // vk.K[104].Y
        mul_input[2] = input[103];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[104] * input[103]
        mul_input[0] = uint256(3719244057395103630034421573093869486351254975074295620570702631930945456316); // vk.K[105].X
        mul_input[1] = uint256(19542442084672380918033617141135816363761471159112429186277926762445750384255); // vk.K[105].Y
        mul_input[2] = input[104];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[105] * input[104]
        mul_input[0] = uint256(7892727644712627209573088875055795711014766487780856858790474691951660543943); // vk.K[106].X
        mul_input[1] = uint256(14095329616984407330607537957166492590337886835207889041553289811615832192940); // vk.K[106].Y
        mul_input[2] = input[105];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[106] * input[105]
        mul_input[0] = uint256(16850845677075006646836228040456716890492285371749641415586619521562168477382); // vk.K[107].X
        mul_input[1] = uint256(18464090581523327545834341539075657702656779011530707946483792338817715304224); // vk.K[107].Y
        mul_input[2] = input[106];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[107] * input[106]
        mul_input[0] = uint256(21264152901817511184272081426487426214059519414957891133361906876133377126466); // vk.K[108].X
        mul_input[1] = uint256(21270954617251809630971566095748767439667880904322634254930834698640963144409); // vk.K[108].Y
        mul_input[2] = input[107];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[108] * input[107]
        mul_input[0] = uint256(15979715369680426774783777875050713794937905417773762098582948742402947559552); // vk.K[109].X
        mul_input[1] = uint256(18168060935102514321913414536386759151691060392986042099786607066911595778725); // vk.K[109].Y
        mul_input[2] = input[108];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[109] * input[108]
        mul_input[0] = uint256(12332778583774185913673339200215249914809483286028389453142364313512630124473); // vk.K[110].X
        mul_input[1] = uint256(12231959690166522874944210458314692297453647527934627875964651439587303768319); // vk.K[110].Y
        mul_input[2] = input[109];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[110] * input[109]
        mul_input[0] = uint256(386172263776131871803056627732829320288680990924110225378999589161531899007); // vk.K[111].X
        mul_input[1] = uint256(18118933072411095991429270218389904640008207567869843574470705828738134918333); // vk.K[111].Y
        mul_input[2] = input[110];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[111] * input[110]
        mul_input[0] = uint256(5880313121702308227402178973774959914449341616728252862068027240105829763477); // vk.K[112].X
        mul_input[1] = uint256(18235221736700822644960657108502134636137853117653860410325956923630563115439); // vk.K[112].Y
        mul_input[2] = input[111];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[112] * input[111]
        mul_input[0] = uint256(11540262238504403137703072290606636280121839341738271253457128176056068435473); // vk.K[113].X
        mul_input[1] = uint256(19908124043830222281812388629444651904550456576651988594913064355425270131967); // vk.K[113].Y
        mul_input[2] = input[112];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[113] * input[112]
        mul_input[0] = uint256(19116413480801678743316116820614320915219780042207761597905546388642949273698); // vk.K[114].X
        mul_input[1] = uint256(16287442420344035927898935706018779962011604264978890714557387614429433502063); // vk.K[114].Y
        mul_input[2] = input[113];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[114] * input[113]
        mul_input[0] = uint256(5107550295511299733959857963392258816054970239353353078967819399079135359188); // vk.K[115].X
        mul_input[1] = uint256(4378338724712208342842951214105647350107328927792470005622149605293853171145); // vk.K[115].Y
        mul_input[2] = input[114];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[115] * input[114]
        mul_input[0] = uint256(2107911849202100729102645495671478412784074953127787428760575179207705671749); // vk.K[116].X
        mul_input[1] = uint256(1271444050146966804144191610083564564291301634587908323793929250983843835943); // vk.K[116].Y
        mul_input[2] = input[115];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[116] * input[115]
        mul_input[0] = uint256(4361897534470994665442569900237281411953010282827587413170646444661397671050); // vk.K[117].X
        mul_input[1] = uint256(3180013734371406378923334708976045292240180026266679049563906884434433686515); // vk.K[117].Y
        mul_input[2] = input[116];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[117] * input[116]
        mul_input[0] = uint256(16944465937419904220741040027796944756607793836979658624220952582110309754365); // vk.K[118].X
        mul_input[1] = uint256(19505868664763821522380284932178757212113374173457652032295742417286798947139); // vk.K[118].Y
        mul_input[2] = input[117];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[118] * input[117]
        mul_input[0] = uint256(12722969472257798794421926305410246366392043165236521105859958751451106399665); // vk.K[119].X
        mul_input[1] = uint256(13902468476355257137044937491642387403313701061968413231547455282013762050099); // vk.K[119].Y
        mul_input[2] = input[118];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[119] * input[118]
        mul_input[0] = uint256(13791850522812497218797597666589108327475666960714961503397604005368984332612); // vk.K[120].X
        mul_input[1] = uint256(2544432210535086540546344293858454747871172166878291322935099182102973553307); // vk.K[120].Y
        mul_input[2] = input[119];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[120] * input[119]
        mul_input[0] = uint256(19143816469341641710514829648827329492825901849011597872696414388856259654608); // vk.K[121].X
        mul_input[1] = uint256(1098892776852546915684992619651106092223261935800563479529741375916329995673); // vk.K[121].Y
        mul_input[2] = input[120];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[121] * input[120]
        mul_input[0] = uint256(10830775984567421539348228194986535930866837906267132650536502935757249164604); // vk.K[122].X
        mul_input[1] = uint256(14064494429646542647905805358393481626241821903478386014527234354031179304208); // vk.K[122].Y
        mul_input[2] = input[121];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[122] * input[121]
        mul_input[0] = uint256(7946466659482692965469224559601382549810548510724844487220901686693805320798); // vk.K[123].X
        mul_input[1] = uint256(5568919174561608859942559159095899532412015379365163045574984317695840924442); // vk.K[123].Y
        mul_input[2] = input[122];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[123] * input[122]
        mul_input[0] = uint256(3281463073745000702097132539968471978139802596275056250887694439555374649940); // vk.K[124].X
        mul_input[1] = uint256(19673759868684280100941971885263425681156488103328002491769922860128074729761); // vk.K[124].Y
        mul_input[2] = input[123];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[124] * input[123]
        mul_input[0] = uint256(4023337171657368070414401462518480401467923906586152970683276482781949301685); // vk.K[125].X
        mul_input[1] = uint256(17007967334222016825324959518114971648481603292662599212250220234750791086360); // vk.K[125].Y
        mul_input[2] = input[124];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[125] * input[124]
        mul_input[0] = uint256(2279718234449633503527931749121365683234268983118497463682956777809610254686); // vk.K[126].X
        mul_input[1] = uint256(10560590259927223099204113554467577349932862178556517485822292511522899431781); // vk.K[126].Y
        mul_input[2] = input[125];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[126] * input[125]
        mul_input[0] = uint256(533462181290271736186412991431397203155268783741323430604424588133720153636); // vk.K[127].X
        mul_input[1] = uint256(6629585576524726680561912302840215325951472666561663633140652463334312135318); // vk.K[127].Y
        mul_input[2] = input[126];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[127] * input[126]
        mul_input[0] = uint256(4025024993730382350124477834766763627212726940375977548380949841538574251577); // vk.K[128].X
        mul_input[1] = uint256(19850658690458872013450580973192813416835790310153770286785238929469948773247); // vk.K[128].Y
        mul_input[2] = input[127];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[128] * input[127]
        mul_input[0] = uint256(7136394763934261072611012776863672237875154904637505329923036531479885159734); // vk.K[129].X
        mul_input[1] = uint256(4447620547474856720466377046719252797396424642049847521101307241285085147648); // vk.K[129].Y
        mul_input[2] = input[128];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[129] * input[128]
        mul_input[0] = uint256(16234083733406820691646480080739027318582513870712151446893804293623076748102); // vk.K[130].X
        mul_input[1] = uint256(7162942751302129126133404769528474964812421445457832447035410860767718227123); // vk.K[130].Y
        mul_input[2] = input[129];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[130] * input[129]
        mul_input[0] = uint256(7122527448160164470475220701082910486185703797487125527952111934375598030555); // vk.K[131].X
        mul_input[1] = uint256(21542743218737923491076916335432083363214816632692861233791087262479349637330); // vk.K[131].Y
        mul_input[2] = input[130];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[131] * input[130]
        mul_input[0] = uint256(16148598534592290454883164377915510093193677202805128457005206753924410098911); // vk.K[132].X
        mul_input[1] = uint256(11130500396687500716582748958434844030819824953964611219428297005520080488330); // vk.K[132].Y
        mul_input[2] = input[131];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[132] * input[131]
        mul_input[0] = uint256(21401568710889059196143361914041428446206281880982655393039646094942392333784); // vk.K[133].X
        mul_input[1] = uint256(8317519700221818685091273436829650427235321144203641354143943550211722064832); // vk.K[133].Y
        mul_input[2] = input[132];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[133] * input[132]
        mul_input[0] = uint256(15619854478254708958471079432211460941025353580634971550978021798724153103928); // vk.K[134].X
        mul_input[1] = uint256(16126395187900375394104968433738123709803195374774291605722504991070754715722); // vk.K[134].Y
        mul_input[2] = input[133];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[134] * input[133]
        mul_input[0] = uint256(19856567513733758677339611877077454096571915979915298139070596632102015685857); // vk.K[135].X
        mul_input[1] = uint256(859861091852277667764594953638684046259754444140310413276907460360453725563); // vk.K[135].Y
        mul_input[2] = input[134];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[135] * input[134]
        mul_input[0] = uint256(16980985674368878092181801020732474042213629000927627819047621804645662400216); // vk.K[136].X
        mul_input[1] = uint256(15179742775401119412071001481191645589204367454365096286923335972192470739599); // vk.K[136].Y
        mul_input[2] = input[135];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[136] * input[135]
        mul_input[0] = uint256(509668949009160851929782399829051805034860115683859779885986947012566278794); // vk.K[137].X
        mul_input[1] = uint256(16968417236372770910155642430451465042948703935388072096904464686292145952881); // vk.K[137].Y
        mul_input[2] = input[136];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[137] * input[136]
        mul_input[0] = uint256(10400441229621252907847682730821322447348308991512428732521672617689980302865); // vk.K[138].X
        mul_input[1] = uint256(12496320119824412228605113464912118823622391781236263311782697564385694790078); // vk.K[138].Y
        mul_input[2] = input[137];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[138] * input[137]
        mul_input[0] = uint256(8895185282397228978706744004631184958133365518079786738987779229458478013004); // vk.K[139].X
        mul_input[1] = uint256(5817224439718622080552891094256420012667432335033394676554362689697319680904); // vk.K[139].Y
        mul_input[2] = input[138];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[139] * input[138]
        mul_input[0] = uint256(3039704959608419485400765996743136879534065970954512792829524743049201356647); // vk.K[140].X
        mul_input[1] = uint256(7381600729132556001107749450035710817513747063706201016357030350488998733519); // vk.K[140].Y
        mul_input[2] = input[139];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[140] * input[139]
        mul_input[0] = uint256(1443473265509103447937322797210366329880358853224597372597682455871192836531); // vk.K[141].X
        mul_input[1] = uint256(20910745203364752414056090379898086367459275539512849279752462223698294840188); // vk.K[141].Y
        mul_input[2] = input[140];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[141] * input[140]
        mul_input[0] = uint256(915209188345756098988659518675294521442358552962994906300625550350291822396); // vk.K[142].X
        mul_input[1] = uint256(15264345104999360716355133336398986826909814134392104367084042283255011581061); // vk.K[142].Y
        mul_input[2] = input[141];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[142] * input[141]
        mul_input[0] = uint256(17947384643261336297068595818514820182542069725996553894479948801551346445362); // vk.K[143].X
        mul_input[1] = uint256(19591619095907742790414827753442975375872532158668932197440293855729810392917); // vk.K[143].Y
        mul_input[2] = input[142];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[143] * input[142]
        mul_input[0] = uint256(13628509110702635163536781980032895466112137743455895340949571933622898791841); // vk.K[144].X
        mul_input[1] = uint256(11851939252816540791539578543067860185783251400519614011562414254695693315077); // vk.K[144].Y
        mul_input[2] = input[143];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[144] * input[143]
        mul_input[0] = uint256(1813039436124261264727248350407658440100958790092958661034877605610690785365); // vk.K[145].X
        mul_input[1] = uint256(2603536694219516037215045370485968123731534699137692002098043535764815527298); // vk.K[145].Y
        mul_input[2] = input[144];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[145] * input[144]
        mul_input[0] = uint256(13003132951413751323308227002858490920000368732799421021860071908860066187097); // vk.K[146].X
        mul_input[1] = uint256(12603828539173583377665106704029928762030193071123473103019870558316693869778); // vk.K[146].Y
        mul_input[2] = input[145];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[146] * input[145]
        mul_input[0] = uint256(21625876995280298311846212139098715423453284630215442767282150449972066301469); // vk.K[147].X
        mul_input[1] = uint256(917765581347267326921680257970096430485378293214956470121904348775289949797); // vk.K[147].Y
        mul_input[2] = input[146];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[147] * input[146]
        mul_input[0] = uint256(5039031531999295953976507548332619897286114702420418531811874351390998109096); // vk.K[148].X
        mul_input[1] = uint256(19583058621464601828351302893641106969375451835307922866825643240337335125535); // vk.K[148].Y
        mul_input[2] = input[147];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[148] * input[147]
        mul_input[0] = uint256(19171831817963287627074744271531977541801571119522068582717785550101277901866); // vk.K[149].X
        mul_input[1] = uint256(8691308089631901587822167728425000204047341955000800809004796450022504258227); // vk.K[149].Y
        mul_input[2] = input[148];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[149] * input[148]
        mul_input[0] = uint256(7378332052692971806420374858014884619782342452230614498721659674770323398813); // vk.K[150].X
        mul_input[1] = uint256(17555559695039596417969527564273534400531471467093206683015011783921836753903); // vk.K[150].Y
        mul_input[2] = input[149];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[150] * input[149]
        mul_input[0] = uint256(3546102916737647012945350678363755454860424558073334146781665183456131642500); // vk.K[151].X
        mul_input[1] = uint256(3788930446965818226614945118063642234353225483306562418055700720049905231472); // vk.K[151].Y
        mul_input[2] = input[150];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[151] * input[150]
        mul_input[0] = uint256(17999728603991703373771153676139829054508963255399128573764931688161860513512); // vk.K[152].X
        mul_input[1] = uint256(9425586930649369552101836006504488082283984635839569455621107664085776519159); // vk.K[152].Y
        mul_input[2] = input[151];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[152] * input[151]
        mul_input[0] = uint256(13051113029037533019182983257194369632511908478811285866836020782513911619243); // vk.K[153].X
        mul_input[1] = uint256(7022772757769532565768101386455572098619631565639006272482132915539859599755); // vk.K[153].Y
        mul_input[2] = input[152];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[153] * input[152]
        mul_input[0] = uint256(17733822206857917065292594125663517700686914126055501090753273853885143285049); // vk.K[154].X
        mul_input[1] = uint256(7665800425761009272173231111009077918254991558162663309371790928402328574472); // vk.K[154].Y
        mul_input[2] = input[153];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[154] * input[153]
        mul_input[0] = uint256(4136045333328162191935107858484716120011510782855285926373896663502925838184); // vk.K[155].X
        mul_input[1] = uint256(1009275670444178954916020079411638099871928226137908982503396799308309818961); // vk.K[155].Y
        mul_input[2] = input[154];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[155] * input[154]
        mul_input[0] = uint256(17901307259013042977955842495556648196798657955809776658911257688542470664290); // vk.K[156].X
        mul_input[1] = uint256(2625397936636829585177354467280119854457282573240625736319709007857962161193); // vk.K[156].Y
        mul_input[2] = input[155];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[156] * input[155]
        mul_input[0] = uint256(10163715396411023882426713708460327227214353292470163426732678369952109596405); // vk.K[157].X
        mul_input[1] = uint256(14511144220170756911809533541444899390635877758505086826865266269016881081773); // vk.K[157].Y
        mul_input[2] = input[156];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[157] * input[156]
        mul_input[0] = uint256(11498424388964021150524927278422317802006850527075718205182604174958608921293); // vk.K[158].X
        mul_input[1] = uint256(5132487079367347012239991596544542769874446955510298156604555349387005882670); // vk.K[158].Y
        mul_input[2] = input[157];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[158] * input[157]
        mul_input[0] = uint256(6181732361461535682680150980890649001315657218896866824822857823359257696267); // vk.K[159].X
        mul_input[1] = uint256(21358526478147475442837436072797083985960000050274023280753081778927754641001); // vk.K[159].Y
        mul_input[2] = input[158];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[159] * input[158]
        mul_input[0] = uint256(21297425482152651669447675679567610883941861331876046541710038508854603390198); // vk.K[160].X
        mul_input[1] = uint256(5978991647811920965415642197343955525389202247557451682795974371697649962894); // vk.K[160].Y
        mul_input[2] = input[159];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[160] * input[159]
        mul_input[0] = uint256(19719688689933744594739058411757797556549961475395147882123155141750508796890); // vk.K[161].X
        mul_input[1] = uint256(20683228868865503305787493455195852055508086081920217251255874618848118118818); // vk.K[161].Y
        mul_input[2] = input[160];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[161] * input[160]
        mul_input[0] = uint256(11066590214659883772296944502630873721407668925272591461237882621232898272410); // vk.K[162].X
        mul_input[1] = uint256(19870736391563428196877946315928109508721222534055842448880870037129632101037); // vk.K[162].Y
        mul_input[2] = input[161];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[162] * input[161]
        mul_input[0] = uint256(6207410950147370083961569862116899745505549418982791380426970141000930132967); // vk.K[163].X
        mul_input[1] = uint256(12045009122040325334510552083304856093908008897923992011462731573064064287814); // vk.K[163].Y
        mul_input[2] = input[162];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[163] * input[162]
        mul_input[0] = uint256(6866061333669946228210560757076181683793321857737725091903475870209726655762); // vk.K[164].X
        mul_input[1] = uint256(20214543751839132605854541993737648367360719363606376191341504231433802217586); // vk.K[164].Y
        mul_input[2] = input[163];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[164] * input[163]
        mul_input[0] = uint256(2137033523310003348454167772236439787826992522132102235165285642277030852610); // vk.K[165].X
        mul_input[1] = uint256(5933980194472516913513616716334693244002064700506929119620179429679873534977); // vk.K[165].Y
        mul_input[2] = input[164];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[165] * input[164]
        mul_input[0] = uint256(13869014878688688606117374434723947106950497456731652049673626719250640423780); // vk.K[166].X
        mul_input[1] = uint256(10358217392726318466910745901247973938923330060686543457529444949175222412523); // vk.K[166].Y
        mul_input[2] = input[165];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[166] * input[165]
        mul_input[0] = uint256(14333221219175222043003065686151109837432952171691844229994204407066469914145); // vk.K[167].X
        mul_input[1] = uint256(16596173552183347568694507873420948531019119642275935304475155313924595904071); // vk.K[167].Y
        mul_input[2] = input[166];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[167] * input[166]
        mul_input[0] = uint256(4576231807255668949212892085402214294161518259385562085201301342034564114023); // vk.K[168].X
        mul_input[1] = uint256(12218664293021578628941574169921684690797358724730304856390170642099702784064); // vk.K[168].Y
        mul_input[2] = input[167];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[168] * input[167]
        mul_input[0] = uint256(2451011485444330517955887428412320675023545485678192659211409327159547137422); // vk.K[169].X
        mul_input[1] = uint256(320519968910716510531277452710992621444491637239440344208825944023293004681); // vk.K[169].Y
        mul_input[2] = input[168];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[169] * input[168]
        mul_input[0] = uint256(10822742856713349960108550131935197011260390601225442603044442337773373825493); // vk.K[170].X
        mul_input[1] = uint256(4408396895968232945894409766619916947062525618294942166373251754720917002208); // vk.K[170].Y
        mul_input[2] = input[169];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[170] * input[169]
        mul_input[0] = uint256(12580533332788038372050535109519191841556138632445529969519790050636216806601); // vk.K[171].X
        mul_input[1] = uint256(9948365021725951939453518010001839735612262801533718483853111619129303923192); // vk.K[171].Y
        mul_input[2] = input[170];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[171] * input[170]
        mul_input[0] = uint256(20378891581544080337241386105364609396238746840013597392395073436549941233968); // vk.K[172].X
        mul_input[1] = uint256(21341338783691068387475119297156881596902022568945803065649359302254670904514); // vk.K[172].Y
        mul_input[2] = input[171];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[172] * input[171]
        mul_input[0] = uint256(16942204285179886025850623880425422620929847261606684006405322819556753899774); // vk.K[173].X
        mul_input[1] = uint256(14236312830472396257070437602924012473269995308807981616508345108325419864413); // vk.K[173].Y
        mul_input[2] = input[172];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[173] * input[172]
        mul_input[0] = uint256(9596421198000192332703115887150331747107552651109803762650507228848073354829); // vk.K[174].X
        mul_input[1] = uint256(5272736460943813639178029070277619788755146448518685011705877976166859827212); // vk.K[174].Y
        mul_input[2] = input[173];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[174] * input[173]
        mul_input[0] = uint256(3672924955861535495306046490811728276615164889182771111074496574028722890466); // vk.K[175].X
        mul_input[1] = uint256(1468367845392544497470226110084897856810770115686474385471855314166646815313); // vk.K[175].Y
        mul_input[2] = input[174];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[175] * input[174]
        mul_input[0] = uint256(7518984728884493956635327960523860246921939258328005660430632453530443233911); // vk.K[176].X
        mul_input[1] = uint256(20236574735362187647880503200093857114327499109826694255198606948662340634213); // vk.K[176].Y
        mul_input[2] = input[175];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[176] * input[175]
        mul_input[0] = uint256(11736196484687557438140736503066113536254500640471099403664475295943454183768); // vk.K[177].X
        mul_input[1] = uint256(19412707835567596081863423798995337087555853381721659158081194077951046253952); // vk.K[177].Y
        mul_input[2] = input[176];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[177] * input[176]
        mul_input[0] = uint256(16218838865783801457116329972115965182223046941029905631477784431305061710178); // vk.K[178].X
        mul_input[1] = uint256(16587449217853392743173596913247433808471785383794731358018933520729019871906); // vk.K[178].Y
        mul_input[2] = input[177];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[178] * input[177]
        mul_input[0] = uint256(3412570748089091011864380065194102752877960469109637716949521767855166039465); // vk.K[179].X
        mul_input[1] = uint256(15769842469359575846978159164923855074883747940331363462339397871420192227384); // vk.K[179].Y
        mul_input[2] = input[178];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[179] * input[178]
        mul_input[0] = uint256(6105464598715360914866911079509885685751085077577347736371800917425938769281); // vk.K[180].X
        mul_input[1] = uint256(10688824606902836901369235891264242496923528958822355312497976899661856094475); // vk.K[180].Y
        mul_input[2] = input[179];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[180] * input[179]
        mul_input[0] = uint256(8552326939223034330184237909396704344180874513749993473525066026098427382157); // vk.K[181].X
        mul_input[1] = uint256(18130842237738843247854943474190867191793737022168259820725827604083332262671); // vk.K[181].Y
        mul_input[2] = input[180];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[181] * input[180]
        mul_input[0] = uint256(4448649861408344518669452238295005207124553276876270483116930258540198063979); // vk.K[182].X
        mul_input[1] = uint256(4663259215857618206895329263247480713110983342848715055200329767439593502122); // vk.K[182].Y
        mul_input[2] = input[181];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[182] * input[181]
        mul_input[0] = uint256(6518473957137974375791976534691993550861517340081608094248399290725057208418); // vk.K[183].X
        mul_input[1] = uint256(17008210018835776744238642220570544367024795080063878417368643706338607741566); // vk.K[183].Y
        mul_input[2] = input[182];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[183] * input[182]
        mul_input[0] = uint256(16566246666404211950649770821655337110891109272199683480086658309729066727431); // vk.K[184].X
        mul_input[1] = uint256(18535340202569715186327765753747339467163778631921829300824139321168070152327); // vk.K[184].Y
        mul_input[2] = input[183];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[184] * input[183]
        mul_input[0] = uint256(18603697828030493819924979002279567228764330431097132762943825473990714277583); // vk.K[185].X
        mul_input[1] = uint256(18424510802335110193619458248159381723182769404772717637169657815772918261646); // vk.K[185].Y
        mul_input[2] = input[184];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[185] * input[184]
        mul_input[0] = uint256(10131114204737314053619123441604929881590080326695593812162254675406625026401); // vk.K[186].X
        mul_input[1] = uint256(3098878365254949845857950918936511668491526075317749834642599627480286032944); // vk.K[186].Y
        mul_input[2] = input[185];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[186] * input[185]
        mul_input[0] = uint256(63325515034065361175521530026935545218066735836473355601488415822806011002); // vk.K[187].X
        mul_input[1] = uint256(1144422224020599723555056809311162338486485701449020215744307903079535790344); // vk.K[187].Y
        mul_input[2] = input[186];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[187] * input[186]
        mul_input[0] = uint256(7288059065267394195314187841797325372839263248863419966535325278767940237748); // vk.K[188].X
        mul_input[1] = uint256(16980369191674921120511029524594713315455887068549874149447274161842042376420); // vk.K[188].Y
        mul_input[2] = input[187];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[188] * input[187]
        mul_input[0] = uint256(7538180061618628095860110364158736746414437295690461303929486518525505088976); // vk.K[189].X
        mul_input[1] = uint256(13116950892877384519916703443156436175299105789183436293076208173227150621928); // vk.K[189].Y
        mul_input[2] = input[188];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[189] * input[188]
        mul_input[0] = uint256(7083729320500430616534009725977628596314678839116041883121420923671757621516); // vk.K[190].X
        mul_input[1] = uint256(10003140094931730334693761050303379549076335208984399463991232926493099335419); // vk.K[190].Y
        mul_input[2] = input[189];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[190] * input[189]
        mul_input[0] = uint256(6937873074943847221152273379879927838553113625433302773421946926590016388837); // vk.K[191].X
        mul_input[1] = uint256(7298268095085225577776178698901779115594749101503355392906010524553754386238); // vk.K[191].Y
        mul_input[2] = input[190];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[191] * input[190]
        mul_input[0] = uint256(3127708105597116267475789616254916970568599931664530458759799557351673316428); // vk.K[192].X
        mul_input[1] = uint256(17412239959187670006060046854431532793894937488779747431848701465010711280918); // vk.K[192].Y
        mul_input[2] = input[191];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[192] * input[191]
        mul_input[0] = uint256(14636509245976308822915952250219450160823588428484464596308449469537857419948); // vk.K[193].X
        mul_input[1] = uint256(6801108443361866755128534208848871258715762849089681463818916730251443190380); // vk.K[193].Y
        mul_input[2] = input[192];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[193] * input[192]
        mul_input[0] = uint256(18609523422374702328224398517659243172822013800899397698209142274178015442098); // vk.K[194].X
        mul_input[1] = uint256(11221953869089422601889192502564743055463554158700945234471169851962608277849); // vk.K[194].Y
        mul_input[2] = input[193];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[194] * input[193]
        mul_input[0] = uint256(15114395151620162603570303427403104773196456955679704105205227893839409035500); // vk.K[195].X
        mul_input[1] = uint256(21771654727395773584347867585890368038716310834277657656354160517093751176009); // vk.K[195].Y
        mul_input[2] = input[194];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[195] * input[194]
        mul_input[0] = uint256(4188387505103197161319247030758909119714340010872871623456941462801392948); // vk.K[196].X
        mul_input[1] = uint256(19786685944337468827933799024276077437803293734548326549293196795079295207311); // vk.K[196].Y
        mul_input[2] = input[195];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[196] * input[195]
        mul_input[0] = uint256(5330099530938215476938947389420149873137231445117525767837988919159195719155); // vk.K[197].X
        mul_input[1] = uint256(13674961847081292887494651476970695998861508822271791975092983895737032124465); // vk.K[197].Y
        mul_input[2] = input[196];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[197] * input[196]
        mul_input[0] = uint256(73660066803060580608989905476412205711883757965024359876530287956663430198); // vk.K[198].X
        mul_input[1] = uint256(14140332625760307663480150847219178584129733093976998583469139852149288412033); // vk.K[198].Y
        mul_input[2] = input[197];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[198] * input[197]
        mul_input[0] = uint256(1196230198453317180248400940447413013318749704178275740445400508983947486405); // vk.K[199].X
        mul_input[1] = uint256(19518370280170081979460011765073516520085960258408086251326247183020622069474); // vk.K[199].Y
        mul_input[2] = input[198];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[199] * input[198]
        mul_input[0] = uint256(10920410869313811536022758763996483492742047748536003401335545257141323248032); // vk.K[200].X
        mul_input[1] = uint256(604415138347286005591832697594598332340623275929510674149138527818951199439); // vk.K[200].Y
        mul_input[2] = input[199];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[200] * input[199]
        mul_input[0] = uint256(11693434304738995335114846042969439333221633950614920136019707107648403249853); // vk.K[201].X
        mul_input[1] = uint256(18985185546108505041944828441872572494253080915755012695809791375352916207223); // vk.K[201].Y
        mul_input[2] = input[200];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[201] * input[200]
        mul_input[0] = uint256(10109794109284373806441657106602494736424736080509280870666432353807368854458); // vk.K[202].X
        mul_input[1] = uint256(9975021878894261981521184425955076916096517468645740644691185733697261004903); // vk.K[202].Y
        mul_input[2] = input[201];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[202] * input[201]
        mul_input[0] = uint256(139162186973383477574779915265816980619632498207126424606363538552791318409); // vk.K[203].X
        mul_input[1] = uint256(14046495835213766243781775546862264372477701942627265665034535648282865258111); // vk.K[203].Y
        mul_input[2] = input[202];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[203] * input[202]
        mul_input[0] = uint256(13954125741223940515135659987198795981989546607803305486008047585735182546385); // vk.K[204].X
        mul_input[1] = uint256(20624205935239729858075196468324274322951377562324543539257289261939926262134); // vk.K[204].Y
        mul_input[2] = input[203];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[204] * input[203]
        mul_input[0] = uint256(13639525371824802391532501098751356120266907125278494607172258323831012037979); // vk.K[205].X
        mul_input[1] = uint256(13479443199445843752066357672344011969977423936643538246054840814873057571317); // vk.K[205].Y
        mul_input[2] = input[204];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[205] * input[204]
        mul_input[0] = uint256(12780888311497378568365230947065780487082737256038184615274951770534506764907); // vk.K[206].X
        mul_input[1] = uint256(17012590923534682471499292812365598107942007749479036840489826281736885287707); // vk.K[206].Y
        mul_input[2] = input[205];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[206] * input[205]
        mul_input[0] = uint256(4083373449956116779187525218190101575997365135590158045539972747003061838550); // vk.K[207].X
        mul_input[1] = uint256(15669244961546233140866119282122236108599157721737354537857348183400881347481); // vk.K[207].Y
        mul_input[2] = input[206];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[207] * input[206]
        mul_input[0] = uint256(8300522725535700561745053311884057342923435533722352711826478886791867353332); // vk.K[208].X
        mul_input[1] = uint256(9947015017188718577519764704870033362320749040209878968173842894062622445939); // vk.K[208].Y
        mul_input[2] = input[207];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[208] * input[207]
        mul_input[0] = uint256(9728057560430483644492362470199950585398242339383185850583236299232613666446); // vk.K[209].X
        mul_input[1] = uint256(17254257587283037889423179011694003813707410031572088348794136787854915869702); // vk.K[209].Y
        mul_input[2] = input[208];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[209] * input[208]
        mul_input[0] = uint256(16045481473613926721975755882588323480834110442551440694118927414021397152082); // vk.K[210].X
        mul_input[1] = uint256(17921872228290152946332006832251917326570130576189425217683581840696964060963); // vk.K[210].Y
        mul_input[2] = input[209];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[210] * input[209]
        mul_input[0] = uint256(13078821807604404705630645306616074348551931233910569501421368612921598539603); // vk.K[211].X
        mul_input[1] = uint256(17248736530612948666126159792384725710314624236946683369742116105578694824611); // vk.K[211].Y
        mul_input[2] = input[210];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[211] * input[210]
        mul_input[0] = uint256(21390646791174697768708262864302676143277580952070238738836616351553027250608); // vk.K[212].X
        mul_input[1] = uint256(14587591423444419179553674016022245806513650857585237955228701860408791194450); // vk.K[212].Y
        mul_input[2] = input[211];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[212] * input[211]
        mul_input[0] = uint256(6936726803824722986999245931071137783997557121315596634739165700019069258167); // vk.K[213].X
        mul_input[1] = uint256(3896438431632088500031766705336584734897574303480434769455443196980803973490); // vk.K[213].Y
        mul_input[2] = input[212];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[213] * input[212]
        mul_input[0] = uint256(6995317624028479932224831961922506484923352647973988910371532876918170104520); // vk.K[214].X
        mul_input[1] = uint256(8641153143835573243301056060766650859477889124761124673288563526551773270866); // vk.K[214].Y
        mul_input[2] = input[213];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[214] * input[213]
        mul_input[0] = uint256(11502422996239701731484932697093610508151697160063394899618863598697144465310); // vk.K[215].X
        mul_input[1] = uint256(21226840824161446044599422901731109536579747579329894971875976672771886812830); // vk.K[215].Y
        mul_input[2] = input[214];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[215] * input[214]
        mul_input[0] = uint256(21362312133780198841791866730837047062782260036943363731857620941842946329021); // vk.K[216].X
        mul_input[1] = uint256(7332371564899793135103371227040865365756609512406280633795783212251622247129); // vk.K[216].Y
        mul_input[2] = input[215];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[216] * input[215]
        mul_input[0] = uint256(1953423450867707666269482119286069743274635292829679637339298264806287548939); // vk.K[217].X
        mul_input[1] = uint256(2315322426756609092676278349966971514645135545543415759858600654469332323256); // vk.K[217].Y
        mul_input[2] = input[216];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[217] * input[216]
        mul_input[0] = uint256(19990171186048699347464270569058424863442589902121660465589959733026308361941); // vk.K[218].X
        mul_input[1] = uint256(2706130234455659812734268485081802200615220566285764764459872847883639972750); // vk.K[218].Y
        mul_input[2] = input[217];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[218] * input[217]
        mul_input[0] = uint256(20015553345534632010960950853702527289803233749179020907077528373584911390516); // vk.K[219].X
        mul_input[1] = uint256(3466153311415233633134556384235977181229329174645748378812082816960864128180); // vk.K[219].Y
        mul_input[2] = input[218];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[219] * input[218]
        mul_input[0] = uint256(6754569557815045602377954826973228424468351706216253459299001640353029901467); // vk.K[220].X
        mul_input[1] = uint256(18100752950873441589623215278396737548244622809638446038638578296077986484594); // vk.K[220].Y
        mul_input[2] = input[219];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[220] * input[219]
        mul_input[0] = uint256(20381482804275904544747401872956016253632750428799312386526861308928855998798); // vk.K[221].X
        mul_input[1] = uint256(1203632232897502314725311263556704295592331289214781748093420479795054694296); // vk.K[221].Y
        mul_input[2] = input[220];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[221] * input[220]
        mul_input[0] = uint256(2112554756773001612594499723651938077236658277993896529212947296735078378320); // vk.K[222].X
        mul_input[1] = uint256(18989445333743688422351717407492733659273381704562428779301777535299017157837); // vk.K[222].Y
        mul_input[2] = input[221];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[222] * input[221]
        mul_input[0] = uint256(8309735216542666270344299016000099011930772607545810239571058705436937012603); // vk.K[223].X
        mul_input[1] = uint256(13523280693143842181984753601005004748608841615014939193495841154884003492929); // vk.K[223].Y
        mul_input[2] = input[222];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[223] * input[222]
        mul_input[0] = uint256(16798342761230859322163193333875564709887533211182917134430717254430009536208); // vk.K[224].X
        mul_input[1] = uint256(19850159754544320915626081957021776504278056087750533951577936368178111397703); // vk.K[224].Y
        mul_input[2] = input[223];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[224] * input[223]
        mul_input[0] = uint256(18674093951147222848466170938686390870126558778030232941667510431410172456719); // vk.K[225].X
        mul_input[1] = uint256(165172822496617836781522318797617730495598823038101105972565784447972099581); // vk.K[225].Y
        mul_input[2] = input[224];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[225] * input[224]
        mul_input[0] = uint256(15663379447205641293643647842268183597137794061170188850422253840012971059888); // vk.K[226].X
        mul_input[1] = uint256(14734762921543322217305821608231314923690478005931239431677671853552568400797); // vk.K[226].Y
        mul_input[2] = input[225];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[226] * input[225]
        mul_input[0] = uint256(4442833838311700754140473269886315949556896261202610424109263676808058712942); // vk.K[227].X
        mul_input[1] = uint256(5006118774257812400707645703738514901553631427380681630021916024487447550209); // vk.K[227].Y
        mul_input[2] = input[226];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[227] * input[226]
        mul_input[0] = uint256(17685482753647271511562098217001848174548688417682061664298734010752262816163); // vk.K[228].X
        mul_input[1] = uint256(11124196951635712124334065564913364653496857758317788920311369139982543211744); // vk.K[228].Y
        mul_input[2] = input[227];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[228] * input[227]
        mul_input[0] = uint256(16517667711539482202369362105351292718599296401317761984626077766645046130331); // vk.K[229].X
        mul_input[1] = uint256(92889010983412421171702139651718481500817418265261358797716364849769173005); // vk.K[229].Y
        mul_input[2] = input[228];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[229] * input[228]
        mul_input[0] = uint256(10230756860440655321414899748140385948107625039669889290096582398270382676996); // vk.K[230].X
        mul_input[1] = uint256(6420824582646245340486666278628358796645261162067265861256395710296991960248); // vk.K[230].Y
        mul_input[2] = input[229];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[230] * input[229]
        mul_input[0] = uint256(8045733884659983657889302454376269326630474540458845709452361232858394239811); // vk.K[231].X
        mul_input[1] = uint256(13051843277412427712643589542985096142815778206616069522442628176072373527157); // vk.K[231].Y
        mul_input[2] = input[230];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[231] * input[230]
        mul_input[0] = uint256(4888190332565877365277266733178724209508224244700551722966609371490953271691); // vk.K[232].X
        mul_input[1] = uint256(18307213422494029145536021715323766895179215912558419434202848894482159908470); // vk.K[232].Y
        mul_input[2] = input[231];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[232] * input[231]
        mul_input[0] = uint256(17977595787964759382244833322083221297935843339624833576329682049087314807961); // vk.K[233].X
        mul_input[1] = uint256(965229526051564678316943693503474279178132988153427484378323017977854073321); // vk.K[233].Y
        mul_input[2] = input[232];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[233] * input[232]
        mul_input[0] = uint256(20118411650812635429361361512904255745647579216624714245612685079325052782575); // vk.K[234].X
        mul_input[1] = uint256(17380609047101781077418490667242050091325242161924965352563975260449491889330); // vk.K[234].Y
        mul_input[2] = input[233];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[234] * input[233]
        mul_input[0] = uint256(7143669248169485970119356287273413674181688652125220174180375339467728955159); // vk.K[235].X
        mul_input[1] = uint256(13770294240451694941826101380044441828354958846133402523834393947090737924557); // vk.K[235].Y
        mul_input[2] = input[234];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[235] * input[234]
        mul_input[0] = uint256(4399634434382450247615739696135180482631055949752432646992751679338685104594); // vk.K[236].X
        mul_input[1] = uint256(11099459051522789855390341070427280520728456320611193976576600278239253771715); // vk.K[236].Y
        mul_input[2] = input[235];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[236] * input[235]
        mul_input[0] = uint256(5678014312232871658541203304946286556899260034054902977656798688986110296565); // vk.K[237].X
        mul_input[1] = uint256(9587362243775777384700947467845075849955795739064839499716341064775218320266); // vk.K[237].Y
        mul_input[2] = input[236];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[237] * input[236]
        mul_input[0] = uint256(51543876065330426393220530225917405177476117488460883558311907560817362724); // vk.K[238].X
        mul_input[1] = uint256(8731439016573323088087412329902084071426661928581243118747903439437501973604); // vk.K[238].Y
        mul_input[2] = input[237];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[238] * input[237]
        mul_input[0] = uint256(15984136305449534050863336935182068256811326740947513589991726599867771564581); // vk.K[239].X
        mul_input[1] = uint256(9698509179674420555257132892388419132524334195856893569436656434650741352304); // vk.K[239].Y
        mul_input[2] = input[238];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[239] * input[238]
        mul_input[0] = uint256(11430912360677165575249669512405159236538269235318760383823586494377820599529); // vk.K[240].X
        mul_input[1] = uint256(8850422443090457388275940160897634020746518940035064929764057211099796326799); // vk.K[240].Y
        mul_input[2] = input[239];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[240] * input[239]
        mul_input[0] = uint256(2129064143930526988458015401211023263957336697432929040631993441931079132775); // vk.K[241].X
        mul_input[1] = uint256(1993860565366373938221739316256233404064941469638377994345472507553451910291); // vk.K[241].Y
        mul_input[2] = input[240];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[241] * input[240]
        mul_input[0] = uint256(18468149686492823195766512672444521725213768044757062180774457059351441674181); // vk.K[242].X
        mul_input[1] = uint256(19963007153823494996216176464671545092702542352178248339946988644203549387593); // vk.K[242].Y
        mul_input[2] = input[241];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[242] * input[241]
        mul_input[0] = uint256(6860866378773880922062638372989898271135548765421808200880963357275756923019); // vk.K[243].X
        mul_input[1] = uint256(6357526976402306321980538285572624833464645587186469421318381244719389297041); // vk.K[243].Y
        mul_input[2] = input[242];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[243] * input[242]
        mul_input[0] = uint256(21300468177864362863585846227395188340814629394259012667581325587386000058081); // vk.K[244].X
        mul_input[1] = uint256(11502246675402487530775325345147666979390735123061464341911031937654881677273); // vk.K[244].Y
        mul_input[2] = input[243];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[244] * input[243]
        mul_input[0] = uint256(4749624806272293683072052104340203035619441602230724594162988858647765578222); // vk.K[245].X
        mul_input[1] = uint256(18304305583226454417270279156486076300454439168411405133086558491488341496856); // vk.K[245].Y
        mul_input[2] = input[244];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[245] * input[244]
        mul_input[0] = uint256(21592860337867098078518846010874588291919828100832196803726599846600197181662); // vk.K[246].X
        mul_input[1] = uint256(18532126591746876930080152797721859433869291698951708197495099930372996725027); // vk.K[246].Y
        mul_input[2] = input[245];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[246] * input[245]
        mul_input[0] = uint256(8231570847774766031124086074943067433353312736050019369889106870276490050599); // vk.K[247].X
        mul_input[1] = uint256(11923548891847622431896484334990866919582281512742103488444061342394987370652); // vk.K[247].Y
        mul_input[2] = input[246];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[247] * input[246]
        mul_input[0] = uint256(10714079460202158512769239339056230376818655001060699563207804311444079618890); // vk.K[248].X
        mul_input[1] = uint256(10587263253962797033282651722582045468579300366964735907150803273477615205199); // vk.K[248].Y
        mul_input[2] = input[247];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[248] * input[247]
        mul_input[0] = uint256(18943424067606157862751341035754298309403404361581734256462192412069756225244); // vk.K[249].X
        mul_input[1] = uint256(16286387150568680496360161943660111651830121595733033929009642749943750443690); // vk.K[249].Y
        mul_input[2] = input[248];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[249] * input[248]
        mul_input[0] = uint256(3305472418029621292987388157363866045001062101313033867164192155328718665138); // vk.K[250].X
        mul_input[1] = uint256(6304497804467993326017687744972979024954746973236745053909978021918024737508); // vk.K[250].Y
        mul_input[2] = input[249];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[250] * input[249]
        mul_input[0] = uint256(17026727791899427293196987912622037676162707006247884334429240878708479114454); // vk.K[251].X
        mul_input[1] = uint256(2457093049979244610862228565306285736665583938853239083122363861780258489115); // vk.K[251].Y
        mul_input[2] = input[250];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[251] * input[250]
        mul_input[0] = uint256(20514127191177738991646643666882961111492511762173965751644487745473839915630); // vk.K[252].X
        mul_input[1] = uint256(13026385035416883514371540773137933003898861713853027348602126747999702037413); // vk.K[252].Y
        mul_input[2] = input[251];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[252] * input[251]
        mul_input[0] = uint256(19271845587626416336537038258998962057843886444218147127437633865570981480417); // vk.K[253].X
        mul_input[1] = uint256(21764155228440918899011935078804036175543064368091432036756801178935314286432); // vk.K[253].Y
        mul_input[2] = input[252];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[253] * input[252]
        mul_input[0] = uint256(13031317699420529459190641848129486897474110365730339074824414752539694820550); // vk.K[254].X
        mul_input[1] = uint256(10276350237893756150671663458621078260134027377953130963908525818072740313358); // vk.K[254].Y
        mul_input[2] = input[253];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[254] * input[253]
        mul_input[0] = uint256(1068673037026253859884412053677761058675011533790585453370852066008997238687); // vk.K[255].X
        mul_input[1] = uint256(11300999603760424831257014068148037379579165853892813596531590329276738589713); // vk.K[255].Y
        mul_input[2] = input[254];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[255] * input[254]
        mul_input[0] = uint256(8228985922439294800080535535770071257685710792047882945663424329904798076146); // vk.K[256].X
        mul_input[1] = uint256(4254521103033805047255053714460160117305910047482482494612869397984293199441); // vk.K[256].Y
        mul_input[2] = input[255];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[256] * input[255]
        mul_input[0] = uint256(319161468001046554187809789419297026476301034271594684031580555805189127661); // vk.K[257].X
        mul_input[1] = uint256(19576065120167747381530663061269103929644655641274047188234491444587898787357); // vk.K[257].Y
        mul_input[2] = input[256];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[257] * input[256]
        mul_input[0] = uint256(19916880452161270224902480677511491684512605176743408542695903850913927119627); // vk.K[258].X
        mul_input[1] = uint256(19018681791354993567911485079903942729188803433512181637382685117133898546922); // vk.K[258].Y
        mul_input[2] = input[257];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[258] * input[257]
        mul_input[0] = uint256(628291257506455119339020210036854389307492989906634387830518079168867853188); // vk.K[259].X
        mul_input[1] = uint256(16214459747521846929616732363626852154026891418037565379638462583724477913565); // vk.K[259].Y
        mul_input[2] = input[258];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[259] * input[258]
        mul_input[0] = uint256(18750362250843652732045278862936641323702000233858816262455340119790564035887); // vk.K[260].X
        mul_input[1] = uint256(11141305040025213745350632427940198934632457706128599125105085429806770030910); // vk.K[260].Y
        mul_input[2] = input[259];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[260] * input[259]
        mul_input[0] = uint256(9865997724766576508358683539590698718161404865203546400956700685340266808811); // vk.K[261].X
        mul_input[1] = uint256(9357932278323376561461569879198869709961748527432790019709243382947251218798); // vk.K[261].Y
        mul_input[2] = input[260];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[261] * input[260]
        mul_input[0] = uint256(16464686524504881847336638239179758809049275181780083407079580028128413526459); // vk.K[262].X
        mul_input[1] = uint256(3766089308966802566023287474879828412382516441158744774607447327026991766681); // vk.K[262].Y
        mul_input[2] = input[261];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[262] * input[261]
        mul_input[0] = uint256(15514412469496159402989855548042183717851715843104521888217118693465062220111); // vk.K[263].X
        mul_input[1] = uint256(5652117936773052000667728767707810507437031357185148131604356667179607484792); // vk.K[263].Y
        mul_input[2] = input[262];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[263] * input[262]
        mul_input[0] = uint256(15009653647850497797152109167370527344398660462232411846656873455759659130597); // vk.K[264].X
        mul_input[1] = uint256(8128265306299104671855503831172280144707572176650753032144023956064143673138); // vk.K[264].Y
        mul_input[2] = input[263];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[264] * input[263]
        mul_input[0] = uint256(2842252759499043683602193338356565886726314551202288762952868308132847014031); // vk.K[265].X
        mul_input[1] = uint256(1183319245058100769808240783231905554916882938732030300153907501074153470781); // vk.K[265].Y
        mul_input[2] = input[264];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[265] * input[264]
        mul_input[0] = uint256(1120824481373682272282957492419843940253736689178382089387668172388747385554); // vk.K[266].X
        mul_input[1] = uint256(11378375851195349348732709483271119578924355193552913646531782846706713048698); // vk.K[266].Y
        mul_input[2] = input[265];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[266] * input[265]
        mul_input[0] = uint256(12210870891477101228222443936998649621663760917140900757558931858222278185142); // vk.K[267].X
        mul_input[1] = uint256(10447176478247072045789395159053117587759180491418778358920461468706701625241); // vk.K[267].Y
        mul_input[2] = input[266];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[267] * input[266]
        mul_input[0] = uint256(17285576740143688062017982666359784657917321859825133128857936071407563497429); // vk.K[268].X
        mul_input[1] = uint256(4242261597431755779690948383669556902161511953109661624678645488359791998246); // vk.K[268].Y
        mul_input[2] = input[267];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[268] * input[267]
        mul_input[0] = uint256(7623291541439173517631628451902601198237478380293523893619622308651182233784); // vk.K[269].X
        mul_input[1] = uint256(11666536513236883430925849758203463098503094865421398195575123862688456494291); // vk.K[269].Y
        mul_input[2] = input[268];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[269] * input[268]
        mul_input[0] = uint256(10430203548640214089239079062363660545031975391267078127949879270783527769018); // vk.K[270].X
        mul_input[1] = uint256(5689543469030933082449529223030901329893363675557930065372676990707660777621); // vk.K[270].Y
        mul_input[2] = input[269];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[270] * input[269]
        mul_input[0] = uint256(6548578237114544589283361731580602425672900273508860810563924583107697865001); // vk.K[271].X
        mul_input[1] = uint256(9429436052417226124827294514061114911028771541551615039768066428257812154760); // vk.K[271].Y
        mul_input[2] = input[270];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[271] * input[270]
        mul_input[0] = uint256(9412540600917370789175603688487651667553928021009849193615408765174749999751); // vk.K[272].X
        mul_input[1] = uint256(21699842891574809622767836639350646205645350695897007707505773106253908202014); // vk.K[272].Y
        mul_input[2] = input[271];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[272] * input[271]
        mul_input[0] = uint256(1205738386374523181893597722546417620780621393792338700318969712744871694025); // vk.K[273].X
        mul_input[1] = uint256(1265840461543165858012156048728938440005769634695767318282086623008032417269); // vk.K[273].Y
        mul_input[2] = input[272];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[273] * input[272]
        mul_input[0] = uint256(18488831468732275946338315008176447880774437985354401680424113430555305520811); // vk.K[274].X
        mul_input[1] = uint256(19268311854044801408568925297211603050702561283811161732508068789693014749989); // vk.K[274].Y
        mul_input[2] = input[273];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[274] * input[273]
        mul_input[0] = uint256(21771023449957797015479386705308176479776494829900872786706868679055236834443); // vk.K[275].X
        mul_input[1] = uint256(16034079172887813889869699155018681222262714820512162964179305258186878345771); // vk.K[275].Y
        mul_input[2] = input[274];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[275] * input[274]
        mul_input[0] = uint256(4002516197172654952757385691390323877285104965371782009772319244528283236516); // vk.K[276].X
        mul_input[1] = uint256(14125900956010740212421526210122822216274516801579962738024836306348159262511); // vk.K[276].Y
        mul_input[2] = input[275];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[276] * input[275]
        mul_input[0] = uint256(17673714723528621765041029116142758767083332743638891045026582865654134088162); // vk.K[277].X
        mul_input[1] = uint256(11120023527819268847707064441040691929996383649813882633450098016539657308448); // vk.K[277].Y
        mul_input[2] = input[276];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[277] * input[276]
        mul_input[0] = uint256(16522950215436806667771652030456029070339490325611375614274693656945660371520); // vk.K[278].X
        mul_input[1] = uint256(7734728339509370679334806462467524051390623195824277975621925205634210448227); // vk.K[278].Y
        mul_input[2] = input[277];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[278] * input[277]
        mul_input[0] = uint256(21520902724554698397112734198502247442956154866610462057183483210069692859687); // vk.K[279].X
        mul_input[1] = uint256(1215019343870711867613795038879982360514153666665028501441376181669718975952); // vk.K[279].Y
        mul_input[2] = input[278];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[279] * input[278]
        mul_input[0] = uint256(21317921997625541319818558666088355828912867071721038940873999399228398072067); // vk.K[280].X
        mul_input[1] = uint256(2973032995015143391670887157498235177979597035392143057186463427901850546478); // vk.K[280].Y
        mul_input[2] = input[279];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[280] * input[279]
        mul_input[0] = uint256(21377570072197709507076932504164857030910719792333693562907106499148894909658); // vk.K[281].X
        mul_input[1] = uint256(15242094233914341864561122152727037923118286801298034624223450529036215171379); // vk.K[281].Y
        mul_input[2] = input[280];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[281] * input[280]
        mul_input[0] = uint256(13441341276631235516618670376032108159037684967947503333927442014350463234788); // vk.K[282].X
        mul_input[1] = uint256(7237759012354137488960599763103775864424066049211639749251055645980002630178); // vk.K[282].Y
        mul_input[2] = input[281];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[282] * input[281]
        mul_input[0] = uint256(9750544023054439790838863374409263009287067943774428956439957484270900310843); // vk.K[283].X
        mul_input[1] = uint256(187888139615065134638338122476604566153165070659377573720521561268497278963); // vk.K[283].Y
        mul_input[2] = input[282];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[283] * input[282]
        mul_input[0] = uint256(16467040252396901194904614001369154994644830239495878057623405206653675126744); // vk.K[284].X
        mul_input[1] = uint256(1445947539393745115568749317794189299278304896715474694264193585592497170469); // vk.K[284].Y
        mul_input[2] = input[283];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[284] * input[283]
        mul_input[0] = uint256(3790114635745753076764479079963349759651346158204397608493985901012937495177); // vk.K[285].X
        mul_input[1] = uint256(16434727194118017267176727549760500410129368772655270019260101184083783782340); // vk.K[285].Y
        mul_input[2] = input[284];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[285] * input[284]
        mul_input[0] = uint256(423031692627325378905845439544939900163863993630923265040465363542831481973); // vk.K[286].X
        mul_input[1] = uint256(5540289693441882181847841459443872651593655301473113850035155420635782047156); // vk.K[286].Y
        mul_input[2] = input[285];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[286] * input[285]
        mul_input[0] = uint256(8205610016667120900876038334922523647597240102583902210638307697687762383682); // vk.K[287].X
        mul_input[1] = uint256(16431755531207192613852813919815053542046831407343406349163751939500431777754); // vk.K[287].Y
        mul_input[2] = input[286];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[287] * input[286]
        mul_input[0] = uint256(13971543369910266979558495711421205001198056558627238202992708867615563063573); // vk.K[288].X
        mul_input[1] = uint256(1669998741656283125425016738770084484085386971856988012543380903924177185418); // vk.K[288].Y
        mul_input[2] = input[287];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[288] * input[287]
        mul_input[0] = uint256(2915013819464999323456178109899232636145043403363334706244140142659841433695); // vk.K[289].X
        mul_input[1] = uint256(6535847973929749348195770785716119182896796228740183651411278468824501638057); // vk.K[289].Y
        mul_input[2] = input[288];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[289] * input[288]
        mul_input[0] = uint256(13808411447075218518491917598527874702913395276156834716563320720212949543325); // vk.K[290].X
        mul_input[1] = uint256(21214094767539853586001243323036890930403098382208317885746661880954538163945); // vk.K[290].Y
        mul_input[2] = input[289];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[290] * input[289]
        mul_input[0] = uint256(6064413510803243488541741771341453326356280451778590156375120095904648054795); // vk.K[291].X
        mul_input[1] = uint256(15390492285321305762107969386522786069035455738619188473320960240680505858492); // vk.K[291].Y
        mul_input[2] = input[290];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[291] * input[290]
        mul_input[0] = uint256(9056466380907712204972653309399809476342905182513461534093183557939868022293); // vk.K[292].X
        mul_input[1] = uint256(14558175966563988263476779100778357692525942011585297120248159212311722744482); // vk.K[292].Y
        mul_input[2] = input[291];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[292] * input[291]
        mul_input[0] = uint256(18242566634397552684921380287846289513808138012661332989617289275596461864713); // vk.K[293].X
        mul_input[1] = uint256(2972735252686398000901600196495518946150375402466651640262034105178339294440); // vk.K[293].Y
        mul_input[2] = input[292];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[293] * input[292]
        mul_input[0] = uint256(20159385235524456463511345880129834770225972273716740133854562618201330624971); // vk.K[294].X
        mul_input[1] = uint256(9423693971928630951614304201922389723854142695059443779725752202208906709814); // vk.K[294].Y
        mul_input[2] = input[293];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[294] * input[293]
        mul_input[0] = uint256(2722661106416095373606600652444678116437594475572526224065883354053365852245); // vk.K[295].X
        mul_input[1] = uint256(19310437454367497539938963693416554831310073052021282634781489947199745622054); // vk.K[295].Y
        mul_input[2] = input[294];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[295] * input[294]
        mul_input[0] = uint256(15458812489067153840939217632642723520584120267575296614767241943049446165176); // vk.K[296].X
        mul_input[1] = uint256(3145118135273210865550725124740635619073123750744578881222081807915427649087); // vk.K[296].Y
        mul_input[2] = input[295];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[296] * input[295]
        mul_input[0] = uint256(16670231075916099416624832575206225689130727938617650052402224170625612605096); // vk.K[297].X
        mul_input[1] = uint256(433063191868786727804275551478473522091880227102282383879410521904960314552); // vk.K[297].Y
        mul_input[2] = input[296];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[297] * input[296]
        mul_input[0] = uint256(21480964537112871842151002287800980119349494006453694367695158097121273996625); // vk.K[298].X
        mul_input[1] = uint256(20027799845985637312053780816382213027924327315663025490341034377086863179814); // vk.K[298].Y
        mul_input[2] = input[297];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[298] * input[297]
        mul_input[0] = uint256(17585683726340635367882953152244095227733550908932186055637838011438287409957); // vk.K[299].X
        mul_input[1] = uint256(14051879213794947912127928751828995542576946449456882605900370655575301264893); // vk.K[299].Y
        mul_input[2] = input[298];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[299] * input[298]
        mul_input[0] = uint256(19101517867149533826936441183767783444981951002693492089906082517626330699508); // vk.K[300].X
        mul_input[1] = uint256(57853344651845580602229811258104159273672711579258941001245404984690373214); // vk.K[300].Y
        mul_input[2] = input[299];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[300] * input[299]
        mul_input[0] = uint256(21086648111188787323318124370489221597535455386946844871021004206837449759234); // vk.K[301].X
        mul_input[1] = uint256(17427434670253490323825716518366262410121515792098024689288534447244941929418); // vk.K[301].Y
        mul_input[2] = input[300];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[301] * input[300]
        mul_input[0] = uint256(19637983306059318270289857499855054654771927718455114360032418681230886133383); // vk.K[302].X
        mul_input[1] = uint256(21400126557717398750952971085246528972509264642313918332530640857447522862475); // vk.K[302].Y
        mul_input[2] = input[301];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[302] * input[301]
        mul_input[0] = uint256(11192627986426968299957589484792969507687253119711778332036593460309750754238); // vk.K[303].X
        mul_input[1] = uint256(911868788102795808274750390790263177849444112349254848922566526860653341989); // vk.K[303].Y
        mul_input[2] = input[302];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[303] * input[302]
        mul_input[0] = uint256(13672365568730368848336038691462251261675016327356695032014400830538948905262); // vk.K[304].X
        mul_input[1] = uint256(19182419102204594079137505580860624111276259204004655839598641082806946004121); // vk.K[304].Y
        mul_input[2] = input[303];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[304] * input[303]
        mul_input[0] = uint256(13160308516752993082206729037801859856227691483298209627812275230969686928793); // vk.K[305].X
        mul_input[1] = uint256(19253210867534554636917418239372291755451488076790042669437519507518995812613); // vk.K[305].Y
        mul_input[2] = input[304];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[305] * input[304]
        mul_input[0] = uint256(21733786864006132594857207003537471523830369249312951218167453565842039589459); // vk.K[306].X
        mul_input[1] = uint256(16521598331854008615333987243649093863246679344307533260916682898154169445894); // vk.K[306].Y
        mul_input[2] = input[305];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[306] * input[305]
        mul_input[0] = uint256(2142245400078588351674398403276518466230111215001781949251289516286738787932); // vk.K[307].X
        mul_input[1] = uint256(4397568202583908633224017866415029345156934235237682484402215262424404379813); // vk.K[307].Y
        mul_input[2] = input[306];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[307] * input[306]
        mul_input[0] = uint256(4130025250065621122536631252728801716967227097642029167725773392266474773787); // vk.K[308].X
        mul_input[1] = uint256(10873373992066543705101331960539051058646505541120527217880653334906926974504); // vk.K[308].Y
        mul_input[2] = input[307];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[308] * input[307]
        mul_input[0] = uint256(3169819117854565525957146604002509437883068413811748182851295376417624819378); // vk.K[309].X
        mul_input[1] = uint256(12205908556500497191775141025982903532665600557156023329437114719024659929531); // vk.K[309].Y
        mul_input[2] = input[308];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[309] * input[308]
        mul_input[0] = uint256(5432160905113729166172849680041900591894356228333760455999754692308261180953); // vk.K[310].X
        mul_input[1] = uint256(18527838973920003773709598336793322699690100580005840672844740807654213867247); // vk.K[310].Y
        mul_input[2] = input[309];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[310] * input[309]
        mul_input[0] = uint256(21281854950924556550450694042105017069229523430024585837721304742498739937232); // vk.K[311].X
        mul_input[1] = uint256(11599378867987632211825121651664613488475423315382657691165207387212386697152); // vk.K[311].Y
        mul_input[2] = input[310];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[311] * input[310]
        mul_input[0] = uint256(21485618248285641838496001086975875428641340510941201495487611511293547524424); // vk.K[312].X
        mul_input[1] = uint256(6606675107341277903508257976976025089786122846528748380824440650674906312267); // vk.K[312].Y
        mul_input[2] = input[311];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[312] * input[311]
        mul_input[0] = uint256(9661676882940582432408932602193252889387291019463124147860348685904815064335); // vk.K[313].X
        mul_input[1] = uint256(7028812842393366474927163133430543511184108517526503510662456678612577764647); // vk.K[313].Y
        mul_input[2] = input[312];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[313] * input[312]
        mul_input[0] = uint256(21629323081091543849450961991579551432480193085431093291572227900577741547701); // vk.K[314].X
        mul_input[1] = uint256(12888714904180109468309562631318642609170127072406901955557440562091451860754); // vk.K[314].Y
        mul_input[2] = input[313];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[314] * input[313]
        mul_input[0] = uint256(473069545864219281365878253782203391763021030253030001286835127703525706860); // vk.K[315].X
        mul_input[1] = uint256(873612995715616044098872698936650729550769144299633547015832057850448050029); // vk.K[315].Y
        mul_input[2] = input[314];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[315] * input[314]
        mul_input[0] = uint256(1204731609356965734749657700859827045054536868706817582586590697027974413996); // vk.K[316].X
        mul_input[1] = uint256(19095434430453209059866458453365523285704840611569178904062231621279617011294); // vk.K[316].Y
        mul_input[2] = input[315];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[316] * input[315]
        mul_input[0] = uint256(8632088653853980732961315531647407394560841245048849075564362339472064300458); // vk.K[317].X
        mul_input[1] = uint256(272445514476276587438278721602639453477297661006799810018339580748169626263); // vk.K[317].Y
        mul_input[2] = input[316];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[317] * input[316]
        mul_input[0] = uint256(15770785204207686509658295192922026506712297475866051892894916994261794621088); // vk.K[318].X
        mul_input[1] = uint256(6476951077690634922168172326520273860807184259179152980441356234755999360500); // vk.K[318].Y
        mul_input[2] = input[317];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[318] * input[317]
        mul_input[0] = uint256(19616432781402427115316269894995184118625238270485452545811852937322413988136); // vk.K[319].X
        mul_input[1] = uint256(2873595684678652534744096118092234816300747762728412713070347977683146943387); // vk.K[319].Y
        mul_input[2] = input[318];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[319] * input[318]
        mul_input[0] = uint256(2677162494700539104031024508352212093957600839784321248885003527476915355094); // vk.K[320].X
        mul_input[1] = uint256(20092690493444382711311530312276237091180190794391500837128469251009550493456); // vk.K[320].Y
        mul_input[2] = input[319];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[320] * input[319]
        mul_input[0] = uint256(14603710072671386203054507090757528661270000648739317610081785878298429855896); // vk.K[321].X
        mul_input[1] = uint256(9494336454555616319088121574579365009196376302426269857304846026997026783042); // vk.K[321].Y
        mul_input[2] = input[320];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[321] * input[320]
        mul_input[0] = uint256(5711925669901362476979611518642724224037125999937447553167592585018385346412); // vk.K[322].X
        mul_input[1] = uint256(9731662974663403397187624993273177877612555751123723950712068540822263655207); // vk.K[322].Y
        mul_input[2] = input[321];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[322] * input[321]
        mul_input[0] = uint256(5061646911198570262357431058783846783923500252182280701595564216322813890569); // vk.K[323].X
        mul_input[1] = uint256(17379587339751050206806007267047829386950993906953638834865572513915019995969); // vk.K[323].Y
        mul_input[2] = input[322];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[323] * input[322]
        mul_input[0] = uint256(19487949564146251481259694529569635517134839691231184092377183127996105027125); // vk.K[324].X
        mul_input[1] = uint256(10915949063952149900778160232493731714956034280692699597598056431070941327115); // vk.K[324].Y
        mul_input[2] = input[323];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[324] * input[323]
        mul_input[0] = uint256(7260505033661048545726190978603856239565574026517402360168703866659382289175); // vk.K[325].X
        mul_input[1] = uint256(3114188782632506121860419619688749620257150990160971088916551337852538181264); // vk.K[325].Y
        mul_input[2] = input[324];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[325] * input[324]
        mul_input[0] = uint256(18310943835735673844381133555934844067940981418167294640600124644229657224337); // vk.K[326].X
        mul_input[1] = uint256(12660081196391065392726241505123050327543475888329385096210155724793965205372); // vk.K[326].Y
        mul_input[2] = input[325];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[326] * input[325]
        mul_input[0] = uint256(19903771450541072422553556689010486015211489787010950610410401654591351715058); // vk.K[327].X
        mul_input[1] = uint256(21654086570844992995835700028542658904113761675574467296079724330329948841346); // vk.K[327].Y
        mul_input[2] = input[326];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[327] * input[326]
        mul_input[0] = uint256(14870754612496063854369831563486853783793310160888556285643617412853761307998); // vk.K[328].X
        mul_input[1] = uint256(10472151749337215791050850956750507324359552043110172983927099414638066613382); // vk.K[328].Y
        mul_input[2] = input[327];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[328] * input[327]
        mul_input[0] = uint256(21175985696207532455289457633810194641071368933054758441262809119605311631292); // vk.K[329].X
        mul_input[1] = uint256(9629075359078608333917411607020812104718762039990556012195690296072179247907); // vk.K[329].Y
        mul_input[2] = input[328];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[329] * input[328]
        mul_input[0] = uint256(2311738852249588269840244983415561805906464273228136400913947915871495703351); // vk.K[330].X
        mul_input[1] = uint256(19652884213725080385745304501042473453103793492700600733125286552858623205855); // vk.K[330].Y
        mul_input[2] = input[329];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[330] * input[329]
        mul_input[0] = uint256(11368010285610421083168659842457150605350308535240189738206336538896000844745); // vk.K[331].X
        mul_input[1] = uint256(9784852520638512141687624161058423290021887203918989697215986916555941842318); // vk.K[331].Y
        mul_input[2] = input[330];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[331] * input[330]
        mul_input[0] = uint256(3684407041091830361822992924344759316003766351512323822002204057014339715178); // vk.K[332].X
        mul_input[1] = uint256(5446592740101656882583865057740640655675580865805352694797917302926134948457); // vk.K[332].Y
        mul_input[2] = input[331];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[332] * input[331]
        mul_input[0] = uint256(4206005117720521790657708646481536079620605076507801415414737382270987226907); // vk.K[333].X
        mul_input[1] = uint256(12281242081854790687663803099126947782906212212663504657267866465903761706222); // vk.K[333].Y
        mul_input[2] = input[332];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[333] * input[332]
        mul_input[0] = uint256(9644017210523285379143402945435677930622803801769419362670164457041948892051); // vk.K[334].X
        mul_input[1] = uint256(10503486075039125159324394141415590031129090231982642834666445845331253756959); // vk.K[334].Y
        mul_input[2] = input[333];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[334] * input[333]
        mul_input[0] = uint256(3256746129481333324224946924421549221234292900157353290504378751593050548807); // vk.K[335].X
        mul_input[1] = uint256(12246446130262542215583415003326052338396236782579299129117832030716114644088); // vk.K[335].Y
        mul_input[2] = input[334];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[335] * input[334]
        mul_input[0] = uint256(20173928249692145717226190372202967479870132834238384324419830436606800263688); // vk.K[336].X
        mul_input[1] = uint256(4490584570206566772144984205403782169061754190870798223073840119611756999271); // vk.K[336].Y
        mul_input[2] = input[335];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[336] * input[335]
        mul_input[0] = uint256(20196865874884753270701526442039933938531022783362768649180546366728223518254); // vk.K[337].X
        mul_input[1] = uint256(7385607413338070326929439083445562043358158159150355501627856503350726837596); // vk.K[337].Y
        mul_input[2] = input[336];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[337] * input[336]
        mul_input[0] = uint256(3297604417503014960577431521702171923453739325761408464076598531923221576946); // vk.K[338].X
        mul_input[1] = uint256(6675900491403069420217495127232646876262692768974269749061101307616526001856); // vk.K[338].Y
        mul_input[2] = input[337];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[338] * input[337]
        mul_input[0] = uint256(4043768428476628552896902388694531930820688549214960655582954311158791636941); // vk.K[339].X
        mul_input[1] = uint256(3402710672333669412607299219812118319868667580545830099506095083574707803698); // vk.K[339].Y
        mul_input[2] = input[338];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[339] * input[338]
        mul_input[0] = uint256(4238530344588422317940432980600206060675454950114711038468285422825800996165); // vk.K[340].X
        mul_input[1] = uint256(18451625011662129682180111592399348328703126774554496264397875225168265082856); // vk.K[340].Y
        mul_input[2] = input[339];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[340] * input[339]
        mul_input[0] = uint256(6846508150249306322504936601656069471843394161650093741053851836658610081095); // vk.K[341].X
        mul_input[1] = uint256(19590428173640194645696278161958924727107282903486903225369319382617039708749); // vk.K[341].Y
        mul_input[2] = input[340];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[341] * input[340]
        mul_input[0] = uint256(4012788774105111047822291233255455184702874575571036114780858802522602140529); // vk.K[342].X
        mul_input[1] = uint256(4376697009852739666518063193717338641594734901752125373870720022823499712209); // vk.K[342].Y
        mul_input[2] = input[341];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[342] * input[341]
        mul_input[0] = uint256(1768941608120624574413593358000846805784866225423731425193596540179527476754); // vk.K[343].X
        mul_input[1] = uint256(18574763104387940596479745095842348200284173965868711231530598483119539178214); // vk.K[343].Y
        mul_input[2] = input[342];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[343] * input[342]
        mul_input[0] = uint256(10889803179558230510440477210970409722958750617784206392538496549072433333990); // vk.K[344].X
        mul_input[1] = uint256(2843499394171383004795425277849128203621147185321869863746668048981291733590); // vk.K[344].Y
        mul_input[2] = input[343];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[344] * input[343]
        mul_input[0] = uint256(21231041041064933874557126747435989706875779747409241697005519436848161148496); // vk.K[345].X
        mul_input[1] = uint256(1454779730410913457117923932046687589656497314870575293245448438424910323446); // vk.K[345].Y
        mul_input[2] = input[344];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[345] * input[344]
        mul_input[0] = uint256(15256990518495100836162574262221794475408231331388871978039837304277614654576); // vk.K[346].X
        mul_input[1] = uint256(13110029736860982630790228493429022067953556295004928981179237521861732503677); // vk.K[346].Y
        mul_input[2] = input[345];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[346] * input[345]
        mul_input[0] = uint256(13933256619263764413655230239254539163292454446435219689687401575482165007685); // vk.K[347].X
        mul_input[1] = uint256(10469778437227986232446426017409704378548576761545790532392305367841397371338); // vk.K[347].Y
        mul_input[2] = input[346];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[347] * input[346]
        mul_input[0] = uint256(15149243637756745631133504738134855349003874275151415829352212356646515043340); // vk.K[348].X
        mul_input[1] = uint256(10220224459737503107601021695021483849838153479351250929848382404252259838686); // vk.K[348].Y
        mul_input[2] = input[347];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[348] * input[347]
        mul_input[0] = uint256(7459775912493687339839775000925642005684253945083133341146498862658406243285); // vk.K[349].X
        mul_input[1] = uint256(6408907033448313825108802499046694031348157778701695825009598599458351126057); // vk.K[349].Y
        mul_input[2] = input[348];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[349] * input[348]
        mul_input[0] = uint256(13554385589750799522070183279496690280917264122205871042988412988584456473904); // vk.K[350].X
        mul_input[1] = uint256(19884848287828108820524902037836315633570462670075068172856038354117404355924); // vk.K[350].Y
        mul_input[2] = input[349];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[350] * input[349]
        mul_input[0] = uint256(21424307083694136408360612080615780616034261665697009897018092141944476876151); // vk.K[351].X
        mul_input[1] = uint256(6458590854727576987425740006443645952277923626629399896891109102263657398830); // vk.K[351].Y
        mul_input[2] = input[350];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[351] * input[350]
        mul_input[0] = uint256(16115434354601044849220715960610395575961626913545993187124476338380837391593); // vk.K[352].X
        mul_input[1] = uint256(10879522720865676352850857213615077348871060788516081452518864302506681608657); // vk.K[352].Y
        mul_input[2] = input[351];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[352] * input[351]
        mul_input[0] = uint256(11593494025123782060923991272537088401378318857759350469772870160165283898443); // vk.K[353].X
        mul_input[1] = uint256(8483680716210779152163331227094810006910284384062674960148201278297235954764); // vk.K[353].Y
        mul_input[2] = input[352];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[353] * input[352]
        mul_input[0] = uint256(8723054281718520197071846435640357836749537231471602306423525259030168222041); // vk.K[354].X
        mul_input[1] = uint256(2837414796751888596844334168245154913542151530279977603755743241252839508398); // vk.K[354].Y
        mul_input[2] = input[353];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[354] * input[353]
        mul_input[0] = uint256(11738110256118166185485104079117500575006847653372036709388983452423387280952); // vk.K[355].X
        mul_input[1] = uint256(399144446950210892972361323245773036300847021547728096762700943258530135227); // vk.K[355].Y
        mul_input[2] = input[354];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[355] * input[354]
        mul_input[0] = uint256(9986458392299555739227284108163386621565599444425191321722719469018764608413); // vk.K[356].X
        mul_input[1] = uint256(14877133315076811807005939921445073138485808933208108598299911094339902712438); // vk.K[356].Y
        mul_input[2] = input[355];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[356] * input[355]
        mul_input[0] = uint256(13949723994264656380100020020546544774316759292517821613184320176446621100474); // vk.K[357].X
        mul_input[1] = uint256(10019744975287229687608564742713165624614176664628819449461712247271794537636); // vk.K[357].Y
        mul_input[2] = input[356];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[357] * input[356]
        mul_input[0] = uint256(14228838741017949282709184504527944569831072876900539888120767880690683459714); // vk.K[358].X
        mul_input[1] = uint256(6047040219735982942903226040387450110755232763383391584072901013737497792031); // vk.K[358].Y
        mul_input[2] = input[357];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[358] * input[357]
        mul_input[0] = uint256(5400632687957519068558568241889671597485420813334096060548038920951538036289); // vk.K[359].X
        mul_input[1] = uint256(19005878524980686945946721724908425497572861558972002794594056563346464816123); // vk.K[359].Y
        mul_input[2] = input[358];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[359] * input[358]
        mul_input[0] = uint256(5157589995302068456593706908843351389238660100765008569891281616231708111445); // vk.K[360].X
        mul_input[1] = uint256(16978867970813561395517604507735382163318820763893906647796338921394218910427); // vk.K[360].Y
        mul_input[2] = input[359];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[360] * input[359]
        mul_input[0] = uint256(7679283812363406487763162297361435369338485954163424261285090593988364483170); // vk.K[361].X
        mul_input[1] = uint256(4459621018304850865258424795923593865301927382811611916896448396548001729795); // vk.K[361].Y
        mul_input[2] = input[360];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[361] * input[360]
        mul_input[0] = uint256(2664829229969220960105248581915078143949590293328719230423721601258944530225); // vk.K[362].X
        mul_input[1] = uint256(14904065404558748366564337126666778067532701705601368563180557504904026331104); // vk.K[362].Y
        mul_input[2] = input[361];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[362] * input[361]
        mul_input[0] = uint256(17050763843104411475452453737993784741678986926832271119165230204457747586664); // vk.K[363].X
        mul_input[1] = uint256(13668505607888713204085198708748519350688970641249585134783676083885268773789); // vk.K[363].Y
        mul_input[2] = input[362];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[363] * input[362]
        mul_input[0] = uint256(14781307959721840544288307059505771161527737790832785190116431631477545669114); // vk.K[364].X
        mul_input[1] = uint256(3569789457146786855490542119620187826844299893668745223887505711826169411743); // vk.K[364].Y
        mul_input[2] = input[363];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[364] * input[363]
        mul_input[0] = uint256(8250306586604502622168650456482826903097835552127356729561191640683073236041); // vk.K[365].X
        mul_input[1] = uint256(10423154550844530455328955095925764847375893018212103742767156756494986512111); // vk.K[365].Y
        mul_input[2] = input[364];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[365] * input[364]
        mul_input[0] = uint256(10680445724343916081855632212565644979068909868632054793287706517335124208787); // vk.K[366].X
        mul_input[1] = uint256(5285375889721487506541664483663097677058427557854847626842350171247924892374); // vk.K[366].Y
        mul_input[2] = input[365];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[366] * input[365]
        mul_input[0] = uint256(3413091978619143667974388676456985221161350934072560849562603337976600171214); // vk.K[367].X
        mul_input[1] = uint256(7557491835395265379405720075780177783999141327810606331192597349125332859580); // vk.K[367].Y
        mul_input[2] = input[366];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[367] * input[366]
        mul_input[0] = uint256(6352962156781543887965275706112210997184214219356165565222049177417428454493); // vk.K[368].X
        mul_input[1] = uint256(14497359146666897640515127787863115381460435737483955691130934119132704776090); // vk.K[368].Y
        mul_input[2] = input[367];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[368] * input[367]
        mul_input[0] = uint256(14685404501521205675943195921697851096981614140697427890823778390473170746353); // vk.K[369].X
        mul_input[1] = uint256(16394250562958984085900978658879706430178146293583903202471202018494649383410); // vk.K[369].Y
        mul_input[2] = input[368];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[369] * input[368]
        mul_input[0] = uint256(21450286343749900608525532662086918376282096070519424398721977314023781804884); // vk.K[370].X
        mul_input[1] = uint256(12194374820642859161901787825113045128885065203692570266813238967936207874226); // vk.K[370].Y
        mul_input[2] = input[369];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[370] * input[369]
        mul_input[0] = uint256(1746690824074082851564655889123260435272240307008560088387583990717295753978); // vk.K[371].X
        mul_input[1] = uint256(12839401561514811855612607882180020549187150354434042507454259254317975267974); // vk.K[371].Y
        mul_input[2] = input[370];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[371] * input[370]
        mul_input[0] = uint256(6959208445223416859956379337906568884584478292472567807368917514358669476856); // vk.K[372].X
        mul_input[1] = uint256(20685801525670171531608026967961223843654438398833637516342034569441644370743); // vk.K[372].Y
        mul_input[2] = input[371];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[372] * input[371]
        mul_input[0] = uint256(8988871216239529627291378926266583540347225102659889764163995213809447990075); // vk.K[373].X
        mul_input[1] = uint256(21138562294214611076092096370055651687715930582030341097081156893989913825200); // vk.K[373].Y
        mul_input[2] = input[372];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[373] * input[372]
        mul_input[0] = uint256(1309707526654223479722405175039306217402619875320359543422245112036560125452); // vk.K[374].X
        mul_input[1] = uint256(21036735224728122989887073975577867577147136922404960505646895833230957130687); // vk.K[374].Y
        mul_input[2] = input[373];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[374] * input[373]
        mul_input[0] = uint256(13828504475486379545512516050778968591577274602480786500603697321625368932559); // vk.K[375].X
        mul_input[1] = uint256(21343132648033390153068415241216166046030616482896562466870976305994366438313); // vk.K[375].Y
        mul_input[2] = input[374];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[375] * input[374]
        mul_input[0] = uint256(10468948333481722374150414908496667915723274471551513148215299787958296688379); // vk.K[376].X
        mul_input[1] = uint256(15568170980083319726171581485757885050830420268198694557511741152188596330535); // vk.K[376].Y
        mul_input[2] = input[375];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[376] * input[375]
        mul_input[0] = uint256(9214282055000953681313656408472774990006926637371386773343224365657654231743); // vk.K[377].X
        mul_input[1] = uint256(2332232681783805511800071841203357191693236064884970811752906724652626914356); // vk.K[377].Y
        mul_input[2] = input[376];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[377] * input[376]
        mul_input[0] = uint256(21805160353489481840961393455594983319891340322333267233289596836135242587321); // vk.K[378].X
        mul_input[1] = uint256(796125530780496016492192112519288686414227054154141785711546650052853167385); // vk.K[378].Y
        mul_input[2] = input[377];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[378] * input[377]
        mul_input[0] = uint256(8088005002534188219512081874768998760277228674009872721752702725604965868131); // vk.K[379].X
        mul_input[1] = uint256(6745459462898123364863421540399689120984331882163232192578944400215700617793); // vk.K[379].Y
        mul_input[2] = input[378];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[379] * input[378]
        mul_input[0] = uint256(443653661418015804238671982141450651923396587855189066714868981637376310971); // vk.K[380].X
        mul_input[1] = uint256(11499692477644560662484541557313413822013057192894910458528487154989004147525); // vk.K[380].Y
        mul_input[2] = input[379];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[380] * input[379]
        mul_input[0] = uint256(8159094293968464129540082742163216995926048734274901756031606841423125150551); // vk.K[381].X
        mul_input[1] = uint256(2154967303286597614732457533172212600560161820458413871342202461988949471021); // vk.K[381].Y
        mul_input[2] = input[380];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[381] * input[380]
        mul_input[0] = uint256(9493752090725616538868623482194561093836962609197475220295719004083501295551); // vk.K[382].X
        mul_input[1] = uint256(6090662312668459151580090577015241552086602577808520280202614925620958022569); // vk.K[382].Y
        mul_input[2] = input[381];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[382] * input[381]
        mul_input[0] = uint256(1930789080619820598984833356417019704245659633895370221362415921564291871164); // vk.K[383].X
        mul_input[1] = uint256(14107834310857812301394033962368653313504764904567097148467031468503570561108); // vk.K[383].Y
        mul_input[2] = input[382];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[383] * input[382]
        mul_input[0] = uint256(5541353664324029963940398528365868962981670421279719446281250046087702466135); // vk.K[384].X
        mul_input[1] = uint256(7905481249868013379004394305468799422029651683871934205635491320321449594897); // vk.K[384].Y
        mul_input[2] = input[383];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[384] * input[383]
        mul_input[0] = uint256(9487324775651741017808831532696777334831594817870595686663016067475850519507); // vk.K[385].X
        mul_input[1] = uint256(6681589609574284790923989252444949334489075588652860195561826866105881783872); // vk.K[385].Y
        mul_input[2] = input[384];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[385] * input[384]
        mul_input[0] = uint256(3580171948131838700214882092522844112946896555341384220535141766714775467290); // vk.K[386].X
        mul_input[1] = uint256(15383344710780533824210387598896812326671642839237086069183124265917976103400); // vk.K[386].Y
        mul_input[2] = input[385];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[386] * input[385]
        mul_input[0] = uint256(15929119714671173161099331581601981841097715946820885428910211225305098165033); // vk.K[387].X
        mul_input[1] = uint256(1538979209702040472349408099081209388499795111013561598452339189044567695364); // vk.K[387].Y
        mul_input[2] = input[386];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[387] * input[386]
        mul_input[0] = uint256(20227131920040765643581598578291843151554478003245522758707560026189927872280); // vk.K[388].X
        mul_input[1] = uint256(15063914568152507650523683482831764120749899600673538227210326486401328442890); // vk.K[388].Y
        mul_input[2] = input[387];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[388] * input[387]
        mul_input[0] = uint256(2400641046628150451602416460647686463870563992876384523721052656405786496157); // vk.K[389].X
        mul_input[1] = uint256(18986110620368969674317113124553921519630539016183703931253572240317430284383); // vk.K[389].Y
        mul_input[2] = input[388];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[389] * input[388]
        mul_input[0] = uint256(16442472333834422059269336839678431109762082728270843140956827699389400872517); // vk.K[390].X
        mul_input[1] = uint256(20694664156444269974885321499013715837352451042053910568249172507123737065009); // vk.K[390].Y
        mul_input[2] = input[389];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[390] * input[389]
        mul_input[0] = uint256(8819639135777637151629260059504004179086385428460577539992992804492926651105); // vk.K[391].X
        mul_input[1] = uint256(20192171447096872546468736788773333795889771034719462495370391869103661564024); // vk.K[391].Y
        mul_input[2] = input[390];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[391] * input[390]
        mul_input[0] = uint256(9761868981790254868807580524317601885434509738171275744558194167935284454824); // vk.K[392].X
        mul_input[1] = uint256(13447973164149190872388013568094510243925542949891587452715894550528982356419); // vk.K[392].Y
        mul_input[2] = input[391];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[392] * input[391]
        mul_input[0] = uint256(14969316545767130211795431044738084991648742131152816343384219481763637160013); // vk.K[393].X
        mul_input[1] = uint256(12442094303549452888758936246083653044186810017719490607323164921163324125475); // vk.K[393].Y
        mul_input[2] = input[392];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[393] * input[392]
        mul_input[0] = uint256(12142729854607099096769778347530279490611910201105461486457069169690968442630); // vk.K[394].X
        mul_input[1] = uint256(16600033858000585582877687569946885083300977767027268973833885383383026185546); // vk.K[394].Y
        mul_input[2] = input[393];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[394] * input[393]
        mul_input[0] = uint256(5288357598900729140321092163847091203584948727730412102361708133221124787052); // vk.K[395].X
        mul_input[1] = uint256(11195013744777553578210100655743474239838759385053691735173150428258092296629); // vk.K[395].Y
        mul_input[2] = input[394];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[395] * input[394]
        mul_input[0] = uint256(6038953924527791337534160577188664415143314612463252573623400205323419514120); // vk.K[396].X
        mul_input[1] = uint256(2058011862245027501034184753015256033034422810622261881000910277461819263155); // vk.K[396].Y
        mul_input[2] = input[395];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[396] * input[395]
        mul_input[0] = uint256(14462691182971723623354191607319727603699540738904327689771259981903506823532); // vk.K[397].X
        mul_input[1] = uint256(14983410250709163722936326518503818410487959167465561104026684664816479354467); // vk.K[397].Y
        mul_input[2] = input[396];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[397] * input[396]
        mul_input[0] = uint256(11782961443619648054849537552048651428435506301588864543054912473034254259032); // vk.K[398].X
        mul_input[1] = uint256(14258040852726789622937059297779495939323939482571726721117945188119932223641); // vk.K[398].Y
        mul_input[2] = input[397];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[398] * input[397]
        mul_input[0] = uint256(20232698810999976626311032768123614959645215005808990935667058988687925093745); // vk.K[399].X
        mul_input[1] = uint256(4080057740931400669737621324841656317527506786063891299825069872931887374194); // vk.K[399].Y
        mul_input[2] = input[398];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[399] * input[398]
        mul_input[0] = uint256(10455158607209232544292964149923299570295924409104398674443879964837648500566); // vk.K[400].X
        mul_input[1] = uint256(7753566393657474875658684003751245938502290046171750411598099321856884535884); // vk.K[400].Y
        mul_input[2] = input[399];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[400] * input[399]
        mul_input[0] = uint256(9600107392151161437072514641473802689809971158068888256406199674290026738862); // vk.K[401].X
        mul_input[1] = uint256(19823264988573789102965632855308175532136118895455608982751716805611055113884); // vk.K[401].Y
        mul_input[2] = input[400];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[401] * input[400]
        mul_input[0] = uint256(10083585515515927795133086863653842361508565996078570560042570921935412954645); // vk.K[402].X
        mul_input[1] = uint256(12995188305595810866403522882541927839994806368857686184516877115617491707325); // vk.K[402].Y
        mul_input[2] = input[401];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[402] * input[401]
        mul_input[0] = uint256(2771840145401880348978984007515608945434566409268534886487116720792268460263); // vk.K[403].X
        mul_input[1] = uint256(8156912254140516009402818246464108943469988147512261866170233635102070957043); // vk.K[403].Y
        mul_input[2] = input[402];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[403] * input[402]
        mul_input[0] = uint256(20117063866219050688148244586797978465837102944321266326753377037312760153778); // vk.K[404].X
        mul_input[1] = uint256(7844185052090457625388436868861195339631633138822285459290719982882888122784); // vk.K[404].Y
        mul_input[2] = input[403];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[404] * input[403]
        mul_input[0] = uint256(2718025800210271307787729076293351441809844866137135540106758374237138132880); // vk.K[405].X
        mul_input[1] = uint256(9638662236855545341775158146025404034966616285900884197853577873264466669692); // vk.K[405].Y
        mul_input[2] = input[404];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[405] * input[404]
        mul_input[0] = uint256(21247945172248922058053879203642260489534573438221024827782891695541006899779); // vk.K[406].X
        mul_input[1] = uint256(17690745015814614828233857090885616355528955147809939473950105627326965787193); // vk.K[406].Y
        mul_input[2] = input[405];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[406] * input[405]
        mul_input[0] = uint256(11559781341974429616510900673562001305886969112079037939840023950912724556149); // vk.K[407].X
        mul_input[1] = uint256(14748405360226348730718862558978646376744653308610308682945598348842450980179); // vk.K[407].Y
        mul_input[2] = input[406];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[407] * input[406]
        mul_input[0] = uint256(1767295594681939866783229495635309413425435202409267161809497035213512449623); // vk.K[408].X
        mul_input[1] = uint256(14628184520407279003249848286915605640353305102989065739402247529316541694299); // vk.K[408].Y
        mul_input[2] = input[407];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[408] * input[407]
        mul_input[0] = uint256(8082750659626772376338081360489531980678525884359447101884600309740297514089); // vk.K[409].X
        mul_input[1] = uint256(7597426624633992052293542271460583364971536147816787411871191298856435694767); // vk.K[409].Y
        mul_input[2] = input[408];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[409] * input[408]
        mul_input[0] = uint256(19755771409083365698791115837440119962565032541525120784550399668132117618557); // vk.K[410].X
        mul_input[1] = uint256(137282392476531443548772902606999032590395129766794786644519191311035563174); // vk.K[410].Y
        mul_input[2] = input[409];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[410] * input[409]
        mul_input[0] = uint256(5641462409835803338835341187568513237038862420962096957886705372973341671218); // vk.K[411].X
        mul_input[1] = uint256(14876068699623436684573172945604435634651808649982439066878854438266624475054); // vk.K[411].Y
        mul_input[2] = input[410];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[411] * input[410]
        mul_input[0] = uint256(15036054918084200405253703087696978311914208790075105889334277551496481873957); // vk.K[412].X
        mul_input[1] = uint256(15859042632612304018992742073790953324518410059330395429083202174302184695860); // vk.K[412].Y
        mul_input[2] = input[411];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[412] * input[411]
        mul_input[0] = uint256(15282916884402465540961801941745471842138165348531400415247572025539800287289); // vk.K[413].X
        mul_input[1] = uint256(3159389606046057837453445782422682156074184236033033730870826457830862494941); // vk.K[413].Y
        mul_input[2] = input[412];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[413] * input[412]
        mul_input[0] = uint256(701797762161646411882693707811741735615089485554557975096031759870339149742); // vk.K[414].X
        mul_input[1] = uint256(11496704625142565989533679216159939258380522880895095463441333065503017241805); // vk.K[414].Y
        mul_input[2] = input[413];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[414] * input[413]
        mul_input[0] = uint256(3097983613977709288198145279662945877030382020650620228409488167104499929912); // vk.K[415].X
        mul_input[1] = uint256(21361063743890672481039281123424746385159762535501470855570182248691447047397); // vk.K[415].Y
        mul_input[2] = input[414];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[415] * input[414]
        mul_input[0] = uint256(16552071273436577019294316098716550973928131170876247530862829927468098128703); // vk.K[416].X
        mul_input[1] = uint256(20417707003312658267690517076017935394454914623232870802808423527618692527225); // vk.K[416].Y
        mul_input[2] = input[415];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[416] * input[415]
        mul_input[0] = uint256(4021361965848791783046400453805660809810418838320314777767667340002681513437); // vk.K[417].X
        mul_input[1] = uint256(1724132506191669704294802511753845414057531737992320898945891966013630498481); // vk.K[417].Y
        mul_input[2] = input[416];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[417] * input[416]
        mul_input[0] = uint256(1070354341043779847597058388358048478245008809671777913725454154206155786090); // vk.K[418].X
        mul_input[1] = uint256(16118008755540935240537914650585879337434294822629262995168711264799997526048); // vk.K[418].Y
        mul_input[2] = input[417];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[418] * input[417]
        mul_input[0] = uint256(9462788560474595586371838280186655019687935323622545507020797386472117689773); // vk.K[419].X
        mul_input[1] = uint256(17173187343729575251745202788624271140829351748379910563897112774661743646927); // vk.K[419].Y
        mul_input[2] = input[418];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[419] * input[418]
        mul_input[0] = uint256(17879909464840436531732986077189391783049194558653076627269584530126685149756); // vk.K[420].X
        mul_input[1] = uint256(938259914050128211564648000714835003878974943131249081595538166112247013075); // vk.K[420].Y
        mul_input[2] = input[419];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[420] * input[419]
        mul_input[0] = uint256(11034062362678308615545760990365131936310399609408160054297740165686729513139); // vk.K[421].X
        mul_input[1] = uint256(20878153266624723294030380659941372279685918712640232852074513396493709963368); // vk.K[421].Y
        mul_input[2] = input[420];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[421] * input[420]
        mul_input[0] = uint256(2326645199034927136765278058437046436565182386964806253129870732368658282851); // vk.K[422].X
        mul_input[1] = uint256(17035151496691928780953050386693575426332767705406139695890228046427800490847); // vk.K[422].Y
        mul_input[2] = input[421];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[422] * input[421]
        mul_input[0] = uint256(18432372719379649016515597103289592892235958385851669636568693586091744801570); // vk.K[423].X
        mul_input[1] = uint256(13460423653753876504112988177010696029629411902766770597054157633604342898817); // vk.K[423].Y
        mul_input[2] = input[422];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[423] * input[422]
        mul_input[0] = uint256(20070322915260438686247307665560849157379336334251176058271813300148414725802); // vk.K[424].X
        mul_input[1] = uint256(9014769307262611415486327481425905575014822334208870820602661833505650883268); // vk.K[424].Y
        mul_input[2] = input[423];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[424] * input[423]
        mul_input[0] = uint256(15396669703580300453528387480421438500319320210712347414543680808560544512230); // vk.K[425].X
        mul_input[1] = uint256(763825313633923916121423853833083470650481632879085144321482567062220122); // vk.K[425].Y
        mul_input[2] = input[424];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[425] * input[424]
        mul_input[0] = uint256(162927932622400616108216884528767966406958127688893484038179719172143113418); // vk.K[426].X
        mul_input[1] = uint256(9155035960476029749573493178422516814531307391940781608587117955633187739930); // vk.K[426].Y
        mul_input[2] = input[425];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[426] * input[425]
        mul_input[0] = uint256(12358803265623853101022717875104712011959202994709070976849502693406764249769); // vk.K[427].X
        mul_input[1] = uint256(6840311727908229717066951168453799919607294276410467518002411325385772179140); // vk.K[427].Y
        mul_input[2] = input[426];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[427] * input[426]
        mul_input[0] = uint256(248060370596790990139640630841216489816017645137481050171604393256841351492); // vk.K[428].X
        mul_input[1] = uint256(3279315428343822165255626222770104873517522184349476801832032805132917233578); // vk.K[428].Y
        mul_input[2] = input[427];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[428] * input[427]
        mul_input[0] = uint256(3005749613129879246596258176985078629698959699845874913094554434041953635619); // vk.K[429].X
        mul_input[1] = uint256(21553320487954653857589468413602022100450067420827758352091655869123496989028); // vk.K[429].Y
        mul_input[2] = input[428];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[429] * input[428]
        mul_input[0] = uint256(11597582753573291109492891986463774239141810513598923656300398966091803361890); // vk.K[430].X
        mul_input[1] = uint256(21141283181268520976780433062787622855022048740833402038013847068972425519445); // vk.K[430].Y
        mul_input[2] = input[429];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[430] * input[429]
        mul_input[0] = uint256(19461897950658356657783583093810479953351917804756496366404342129193395055387); // vk.K[431].X
        mul_input[1] = uint256(20634805115807404573930770423517036760991395990733893085490728464310306651318); // vk.K[431].Y
        mul_input[2] = input[430];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[431] * input[430]
        mul_input[0] = uint256(5502024712183085401139976767558271881287728237762946887647742223183544171652); // vk.K[432].X
        mul_input[1] = uint256(16957444679880888455978620070600133086577534225093663279863349216365311856382); // vk.K[432].Y
        mul_input[2] = input[431];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[432] * input[431]
        mul_input[0] = uint256(19920753034972699549782888994563712500041460292055246074409002000332138855193); // vk.K[433].X
        mul_input[1] = uint256(19317501959902699914261880954154685736888712173210101450503828194112591307880); // vk.K[433].Y
        mul_input[2] = input[432];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[433] * input[432]
        mul_input[0] = uint256(1621408359587180770355048002031762856326701371018786331586694502472233542052); // vk.K[434].X
        mul_input[1] = uint256(16444057337233687515645070472038316438801240249723053038509246647438672284448); // vk.K[434].Y
        mul_input[2] = input[433];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[434] * input[433]
        mul_input[0] = uint256(5106088475095808459093629192946848764685791523639199052625314316084655681540); // vk.K[435].X
        mul_input[1] = uint256(8329974438577682062942559702270572981484650868552319323219600428220758346244); // vk.K[435].Y
        mul_input[2] = input[434];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[435] * input[434]
        mul_input[0] = uint256(12353642616605325345831642721974700485333715575557577714013461927663231867119); // vk.K[436].X
        mul_input[1] = uint256(10617507643465935318131226107299114580362558897902091549384751528509612450777); // vk.K[436].Y
        mul_input[2] = input[435];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[436] * input[435]
        mul_input[0] = uint256(7715268916506359871049451965688319646504143058988998172888464296421335502573); // vk.K[437].X
        mul_input[1] = uint256(4159047299651900583443214979137552923577901977091395333638157883672951905022); // vk.K[437].Y
        mul_input[2] = input[436];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[437] * input[436]
        mul_input[0] = uint256(19640702365675996553374250545563883744689812134615257155268777399745107704713); // vk.K[438].X
        mul_input[1] = uint256(5803500358601681258044703514825720724142896858767729953765092826816352423900); // vk.K[438].Y
        mul_input[2] = input[437];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[438] * input[437]
        mul_input[0] = uint256(6689485966992227470654248226905423527474214440451419479885110015844805727822); // vk.K[439].X
        mul_input[1] = uint256(16705199727014862419056031567298121552214912217942966943474350458404538824390); // vk.K[439].Y
        mul_input[2] = input[438];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[439] * input[438]
        mul_input[0] = uint256(16022827253659466150540066967253020503798696549803200614896922303036904618495); // vk.K[440].X
        mul_input[1] = uint256(13186402412080848896151000453135925921152387326960603836730853608328696144099); // vk.K[440].Y
        mul_input[2] = input[439];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[440] * input[439]
        mul_input[0] = uint256(21829970193019504251469062321790364121857108942590915298340788768012930246593); // vk.K[441].X
        mul_input[1] = uint256(1725066614215021902874183024292316132599503080664303687928476743616573784892); // vk.K[441].Y
        mul_input[2] = input[440];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[441] * input[440]
        mul_input[0] = uint256(16872682560144375733865949051919058278672335800129820384812216534008775247748); // vk.K[442].X
        mul_input[1] = uint256(298953459892850240085420624533015151594813395699622415996794793904737113711); // vk.K[442].Y
        mul_input[2] = input[441];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[442] * input[441]
        mul_input[0] = uint256(11193459706126194218732896136494112504375938456998328740897323654815284193440); // vk.K[443].X
        mul_input[1] = uint256(828814867978633302188222193679976520745965594505133866808076745167371944708); // vk.K[443].Y
        mul_input[2] = input[442];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[443] * input[442]
        mul_input[0] = uint256(21048041077340327170144425831287612923889008392693014428847492737102783810377); // vk.K[444].X
        mul_input[1] = uint256(6056846534868474501540845260852549100750169147191757631806384900569601842338); // vk.K[444].Y
        mul_input[2] = input[443];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[444] * input[443]
        mul_input[0] = uint256(3820419600558057752223564916132050876555027705446961266197570221949237524761); // vk.K[445].X
        mul_input[1] = uint256(16726860131326938743430931168254899741504807205878904575796450402678890825799); // vk.K[445].Y
        mul_input[2] = input[444];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[445] * input[444]
        mul_input[0] = uint256(2433108262603290146958138472003025214659055048547027347295581398807392097262); // vk.K[446].X
        mul_input[1] = uint256(21803242700237042409297596920709762612684876405576652987660128085697160463220); // vk.K[446].Y
        mul_input[2] = input[445];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[446] * input[445]
        mul_input[0] = uint256(10401609574526255309973874194835200663959163737350950629341366672097880788809); // vk.K[447].X
        mul_input[1] = uint256(8876659054225049786283621173404340276049494054388282232613507495850966710158); // vk.K[447].Y
        mul_input[2] = input[446];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[447] * input[446]
        mul_input[0] = uint256(18316845474253630018517163869468005581041335981640995021857913738402541799930); // vk.K[448].X
        mul_input[1] = uint256(21053314114746342679625995496779922407571906974640619874766452374368927427569); // vk.K[448].Y
        mul_input[2] = input[447];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[448] * input[447]
        mul_input[0] = uint256(11462110254619631146410460111294889629627897888559478543889598610723192099162); // vk.K[449].X
        mul_input[1] = uint256(18739017938819258346033200955017277848137141336464645136199634862613546194253); // vk.K[449].Y
        mul_input[2] = input[448];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[449] * input[448]
        mul_input[0] = uint256(20187252821753004698922247735354155558549229408793391069668564322896524344754); // vk.K[450].X
        mul_input[1] = uint256(21237406647216731927188076075609823397572517412562749813767096055461692050037); // vk.K[450].Y
        mul_input[2] = input[449];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[450] * input[449]
        mul_input[0] = uint256(16838082308091448015855848400429686382310073782369590622924947748738307714907); // vk.K[451].X
        mul_input[1] = uint256(21406260536977236312367190470363923938445154032536622614179884547745935200427); // vk.K[451].Y
        mul_input[2] = input[450];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[451] * input[450]
        mul_input[0] = uint256(12597928322543767910120573047070370187868938550092309934229861881982066355294); // vk.K[452].X
        mul_input[1] = uint256(2665466260623691402836236657103398742546182930606977125656665608867827322779); // vk.K[452].Y
        mul_input[2] = input[451];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[452] * input[451]
        mul_input[0] = uint256(1409867558518518669541250305500447405507815793604524379869816683741066300538); // vk.K[453].X
        mul_input[1] = uint256(17720316880772091938712709586658458162348588928570863509574916224901966178872); // vk.K[453].Y
        mul_input[2] = input[452];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[453] * input[452]
        mul_input[0] = uint256(14324551504614356281737625918837439556502089955030637423184278601156215143727); // vk.K[454].X
        mul_input[1] = uint256(16880510584840527336685271365743735943941229945836389715388484757964679018053); // vk.K[454].Y
        mul_input[2] = input[453];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[454] * input[453]
        mul_input[0] = uint256(349175407144241922351531842917799199970201072491419756719959349400113715773); // vk.K[455].X
        mul_input[1] = uint256(20128339591534830187203003284520818756874379242382096072536528100263125489501); // vk.K[455].Y
        mul_input[2] = input[454];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[455] * input[454]
        mul_input[0] = uint256(20957801081466660770074065958456422809185272039532204366094293501976788199989); // vk.K[456].X
        mul_input[1] = uint256(17104415081297697664354691646011440080036948820191440653752978288330445929879); // vk.K[456].Y
        mul_input[2] = input[455];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[456] * input[455]
        mul_input[0] = uint256(11390364864734356297934257434071762287659515795990851412981255822849724671294); // vk.K[457].X
        mul_input[1] = uint256(18441189006155416244437568512477569104277707159019105430411953219921567339302); // vk.K[457].Y
        mul_input[2] = input[456];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[457] * input[456]
        mul_input[0] = uint256(15074551803016023121871550165046333287649268037727689114974642752675231892792); // vk.K[458].X
        mul_input[1] = uint256(15984776781088913707846845119689252690064230141107127249805298823660586079744); // vk.K[458].Y
        mul_input[2] = input[457];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[458] * input[457]
        mul_input[0] = uint256(9333319860131402794319972802495328963926627084707344616716133325998043221708); // vk.K[459].X
        mul_input[1] = uint256(15273105567810991530019192605611490293142826095690853154045974518100710463584); // vk.K[459].Y
        mul_input[2] = input[458];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[459] * input[458]
        mul_input[0] = uint256(13782514964890760626365841059336858845792303351806404455358408463633652575544); // vk.K[460].X
        mul_input[1] = uint256(14005737136415845187326653686392334684667857632188684421961982905001914467813); // vk.K[460].Y
        mul_input[2] = input[459];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[460] * input[459]
        mul_input[0] = uint256(14578567489883472265374980270662550299753603225764822711905678295111186882478); // vk.K[461].X
        mul_input[1] = uint256(18960673957121016462849002533230245826358131018052794194843956466558276433761); // vk.K[461].Y
        mul_input[2] = input[460];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[461] * input[460]
        mul_input[0] = uint256(13534082348458321414780110157201466962783139151638778359329998404054163606644); // vk.K[462].X
        mul_input[1] = uint256(5228041023248240657632456023127747898894677362547003985527372275637732248661); // vk.K[462].Y
        mul_input[2] = input[461];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[462] * input[461]
        mul_input[0] = uint256(16869549965255218387814968656939731558258816340444583493928596925140463234892); // vk.K[463].X
        mul_input[1] = uint256(20696985128224115056737995203949230045020027000136597099727937291650717008547); // vk.K[463].Y
        mul_input[2] = input[462];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[463] * input[462]
        mul_input[0] = uint256(19485840388926464225159665876973949355173858212380478317439447926836769568528); // vk.K[464].X
        mul_input[1] = uint256(17037944876694737307754725972723920766776894049847008699109090541658727212590); // vk.K[464].Y
        mul_input[2] = input[463];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[464] * input[463]
        mul_input[0] = uint256(5992410017990582548080015055841152471065358015850153451114623700723723617009); // vk.K[465].X
        mul_input[1] = uint256(13885424512179002005611894834138106430593211076671695898627099609643410097974); // vk.K[465].Y
        mul_input[2] = input[464];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[465] * input[464]
        mul_input[0] = uint256(8613165641167589768558265465931144259185930639822581681593747253523762878472); // vk.K[466].X
        mul_input[1] = uint256(18923044298988172528280045102050732456343825421300228951163070178216166262074); // vk.K[466].Y
        mul_input[2] = input[465];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[466] * input[465]
        mul_input[0] = uint256(7630764193302615522738394506092987016795357923794545971625446060151513509465); // vk.K[467].X
        mul_input[1] = uint256(13576640789472238434594325922931817539493738892660842451273102883594936622066); // vk.K[467].Y
        mul_input[2] = input[466];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[467] * input[466]
        mul_input[0] = uint256(3909914287043256502789467340367012147192872696299350633101753564239537904303); // vk.K[468].X
        mul_input[1] = uint256(6383658849552378840881522286395861166505063921742893873895874698652743380116); // vk.K[468].Y
        mul_input[2] = input[467];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[468] * input[467]
        mul_input[0] = uint256(7040147778110987783855368960424549095320180775992986683783901413371093271814); // vk.K[469].X
        mul_input[1] = uint256(123312691584150659710678446427077192144423364631020343049709509386035759241); // vk.K[469].Y
        mul_input[2] = input[468];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[469] * input[468]
        mul_input[0] = uint256(8454428357520595894821980481857649533680208922642570152107859662463899395382); // vk.K[470].X
        mul_input[1] = uint256(8369614917070257627580186676732879219729499254341460166129603318391238195333); // vk.K[470].Y
        mul_input[2] = input[469];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[470] * input[469]
        mul_input[0] = uint256(9023503539974078558042823999864104771651879666353083149225756357714172124815); // vk.K[471].X
        mul_input[1] = uint256(12906645850920773278352433585665556547760784446901983434663877450510474575493); // vk.K[471].Y
        mul_input[2] = input[470];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[471] * input[470]
        mul_input[0] = uint256(9785978774703200632527227864412003376672813368840295321508712087234119884881); // vk.K[472].X
        mul_input[1] = uint256(12944631963976625178927950060185274244184906681957842479578269666839815001862); // vk.K[472].Y
        mul_input[2] = input[471];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[472] * input[471]
        mul_input[0] = uint256(11392800180264836859397107338197323444047760597997626482618149796945654414188); // vk.K[473].X
        mul_input[1] = uint256(4158129307373481150129745665081939754841785951052104451479982702247370872453); // vk.K[473].Y
        mul_input[2] = input[472];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[473] * input[472]
        mul_input[0] = uint256(20263309148568559817393074506433139261378412287291822697910182894197019487583); // vk.K[474].X
        mul_input[1] = uint256(7774575665804225494680311437857300817657125116387478275904756987153070204960); // vk.K[474].Y
        mul_input[2] = input[473];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[474] * input[473]
        mul_input[0] = uint256(19601758233005563715461702877305955428592255921066087485229847308821662836658); // vk.K[475].X
        mul_input[1] = uint256(3380235327804681165554030242952514998443437534631915952077841434091595504032); // vk.K[475].Y
        mul_input[2] = input[474];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[475] * input[474]
        mul_input[0] = uint256(5728936798773048292955418567543884656128825183714546191821668551982376046446); // vk.K[476].X
        mul_input[1] = uint256(12586310754338073373543846545677537957608981101768083596160762370310082978532); // vk.K[476].Y
        mul_input[2] = input[475];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[476] * input[475]
        mul_input[0] = uint256(8249352490572056962095952547569954687447573181879555966663932124546831768267); // vk.K[477].X
        mul_input[1] = uint256(19882848939326344461540778116548133397787285995785329769909204675757968616147); // vk.K[477].Y
        mul_input[2] = input[476];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[477] * input[476]
        mul_input[0] = uint256(11304326113610985900382956658340552379126573548830744796350596248759266980748); // vk.K[478].X
        mul_input[1] = uint256(11767572835039598616902711542346052386158026560510091368380992692876760172302); // vk.K[478].Y
        mul_input[2] = input[477];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[478] * input[477]
        mul_input[0] = uint256(5561825488466990450533746212706472025227067284421309717395543638143716774329); // vk.K[479].X
        mul_input[1] = uint256(21779766891011153576679755782456688536710832010592220599355273209909142081280); // vk.K[479].Y
        mul_input[2] = input[478];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[479] * input[478]
        mul_input[0] = uint256(10659827300758280596586032664984106564140767431884489370310537983910041212500); // vk.K[480].X
        mul_input[1] = uint256(14633285339353575099943281651575514402303191538129013898281875607729754295888); // vk.K[480].Y
        mul_input[2] = input[479];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[480] * input[479]
        mul_input[0] = uint256(4527476924480012115939961481966337833821633650368498277424687830190597836855); // vk.K[481].X
        mul_input[1] = uint256(17885815559400399054220638963071670741218286464006776427930511249180579741312); // vk.K[481].Y
        mul_input[2] = input[480];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[481] * input[480]
        mul_input[0] = uint256(1839820370204939438322126426438098854774619253769712929710811563796509421712); // vk.K[482].X
        mul_input[1] = uint256(13749910828541620253687502004362379404878232653007192328113941203943114098385); // vk.K[482].Y
        mul_input[2] = input[481];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[482] * input[481]
        mul_input[0] = uint256(21718035454919579349355797161408278907983880217413114930821888217308446732180); // vk.K[483].X
        mul_input[1] = uint256(19462795744200299126219876568147611168139280809072814207264481206812043765848); // vk.K[483].Y
        mul_input[2] = input[482];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[483] * input[482]
        mul_input[0] = uint256(14895046100562017631020991279811077765620593667128122925822195815753072079385); // vk.K[484].X
        mul_input[1] = uint256(7838031542200689533251011689994944456746348852022681008076766031873646576495); // vk.K[484].Y
        mul_input[2] = input[483];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[484] * input[483]
        mul_input[0] = uint256(10897636978440367690287954528109655467190672380980633961463426068319058481827); // vk.K[485].X
        mul_input[1] = uint256(5064834682551479385793801688496568222877715051420586837306343168728144111127); // vk.K[485].Y
        mul_input[2] = input[484];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[485] * input[484]
        mul_input[0] = uint256(16114694439286537123081623254001844165496623455664350247358083366617357167555); // vk.K[486].X
        mul_input[1] = uint256(1563160354924756892078573225930871985594661592965054914823332595425450886391); // vk.K[486].Y
        mul_input[2] = input[485];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[486] * input[485]
        mul_input[0] = uint256(5157573439492975295076416480343077104011474866585428255178660480217618820390); // vk.K[487].X
        mul_input[1] = uint256(7433830547778599467332969193462496777701736485637825161847777560794965672536); // vk.K[487].Y
        mul_input[2] = input[486];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[487] * input[486]
        mul_input[0] = uint256(3592108899134733381231401903475903295220674736428085829464122891830826266496); // vk.K[488].X
        mul_input[1] = uint256(8802751953973809971560669686827291691109267076261431905467640974815735742282); // vk.K[488].Y
        mul_input[2] = input[487];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[488] * input[487]
        mul_input[0] = uint256(8659558634637443037305174880907958592836216000850869144351005624249021674358); // vk.K[489].X
        mul_input[1] = uint256(3178302373075652192553395285395741791485056659031843978462613110504120556415); // vk.K[489].Y
        mul_input[2] = input[488];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[489] * input[488]
        mul_input[0] = uint256(13816108004428685666816303753359910524238757400481978653130456741222286033796); // vk.K[490].X
        mul_input[1] = uint256(4486475340197935272775525601181426994169086611454383739012678078437183820696); // vk.K[490].Y
        mul_input[2] = input[489];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[490] * input[489]
        mul_input[0] = uint256(11618011835851518813804642443300462773150154613661440087323503357014498645700); // vk.K[491].X
        mul_input[1] = uint256(3720830104219037371149629512729913665519278015430605263085303286357116200775); // vk.K[491].Y
        mul_input[2] = input[490];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[491] * input[490]
        mul_input[0] = uint256(7807415748268224593590385440035908524143546252243517278810758695846536592175); // vk.K[492].X
        mul_input[1] = uint256(18003464631323418400599423522041872449623766432107696295941617595167115652013); // vk.K[492].Y
        mul_input[2] = input[491];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[492] * input[491]
        mul_input[0] = uint256(8781225288874760889887559447762854577412191978749688016781343055330019030484); // vk.K[493].X
        mul_input[1] = uint256(13012910568745052275793014977596428042835307203248929887113563004202624195187); // vk.K[493].Y
        mul_input[2] = input[492];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[493] * input[492]
        mul_input[0] = uint256(11819882130538792525230054336976077517797791593268403991250936134112308406243); // vk.K[494].X
        mul_input[1] = uint256(4815374390506224297266921622907243823373047446734244343461002826141523953185); // vk.K[494].Y
        mul_input[2] = input[493];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[494] * input[493]
        mul_input[0] = uint256(17074557411553865530100228710108088977820556102943224792855589884217936971386); // vk.K[495].X
        mul_input[1] = uint256(21015471180513792882162755718153717570765166340797028758156012431948658581425); // vk.K[495].Y
        mul_input[2] = input[494];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[495] * input[494]
        mul_input[0] = uint256(12311278871555416135078219050190980146035508605085654939697958308513747861381); // vk.K[496].X
        mul_input[1] = uint256(3434017092252393721340726290184556254125909701605177127748851755609704359927); // vk.K[496].Y
        mul_input[2] = input[495];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[496] * input[495]
        mul_input[0] = uint256(18048725459745878196954583431372375454044880495166416142120554249004707267982); // vk.K[497].X
        mul_input[1] = uint256(20447893507765231369591425840045681336868012445978752859459915296447705007208); // vk.K[497].Y
        mul_input[2] = input[496];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[497] * input[496]
        mul_input[0] = uint256(365244651503382444453086388918640869197444241376094474935779600742568715583); // vk.K[498].X
        mul_input[1] = uint256(9918556664754638964431655221468673323206446634597920222390639845295254170094); // vk.K[498].Y
        mul_input[2] = input[497];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[498] * input[497]
        mul_input[0] = uint256(10889647003969438675942665955564732204833578249487704813728143075803420755610); // vk.K[499].X
        mul_input[1] = uint256(15755124477593150359321433054366573596010136570147421519881327146941782406925); // vk.K[499].Y
        mul_input[2] = input[498];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[499] * input[498]
        mul_input[0] = uint256(6843304070955126319100670833751998233754135671581882225283998008570793178446); // vk.K[500].X
        mul_input[1] = uint256(19355929238210243466478954291729214709062459173810123492847555788387507524694); // vk.K[500].Y
        mul_input[2] = input[499];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[500] * input[499]
        mul_input[0] = uint256(13135141960892915475070852770298137798450428650364848025914530224395519095735); // vk.K[501].X
        mul_input[1] = uint256(20155490934553295050382687028867245866671377020272620332044492599902018005926); // vk.K[501].Y
        mul_input[2] = input[500];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[501] * input[500]
        mul_input[0] = uint256(18229260858940130741295884814932309355664529475936108717987386185336423818034); // vk.K[502].X
        mul_input[1] = uint256(9458358521590082214864124804306757031088053730531241056925970056637233591324); // vk.K[502].Y
        mul_input[2] = input[501];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[502] * input[501]
        mul_input[0] = uint256(10327078147550430761367353285524940914052563356739852773700244441511376124864); // vk.K[503].X
        mul_input[1] = uint256(14042095099656681272509902243486186981315489170917402059071419683486912660192); // vk.K[503].Y
        mul_input[2] = input[502];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[503] * input[502]
        mul_input[0] = uint256(670337182378068373295855109620685066346167410166458648812611343086682499941); // vk.K[504].X
        mul_input[1] = uint256(18574077436752862196635677321821855887173609619648024995880588923393526583578); // vk.K[504].Y
        mul_input[2] = input[503];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[504] * input[503]
        mul_input[0] = uint256(15867123876536622652531460616640689645086366442072808714117237953296079102508); // vk.K[505].X
        mul_input[1] = uint256(16760992373986560263145678532687780368705850295755369732098383282542486989280); // vk.K[505].Y
        mul_input[2] = input[504];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[505] * input[504]
        mul_input[0] = uint256(16478103549901573965948735339551744832727207188938603788265693261354086951453); // vk.K[506].X
        mul_input[1] = uint256(17536453474731726326981293387592454862209647886254073612460908258417807278943); // vk.K[506].Y
        mul_input[2] = input[505];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[506] * input[505]
        mul_input[0] = uint256(2063273600446622151359147424714547527301285981221048255623868622288520086581); // vk.K[507].X
        mul_input[1] = uint256(5822789153502907930769274645109865288924351855217259752740060516269974861992); // vk.K[507].Y
        mul_input[2] = input[506];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[507] * input[506]
        mul_input[0] = uint256(10937257945817917729263265735764813452244844555843309577933751616080022980985); // vk.K[508].X
        mul_input[1] = uint256(20300048580642809530301067587219036981014043309339432206199184243324058832824); // vk.K[508].Y
        mul_input[2] = input[507];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[508] * input[507]
        mul_input[0] = uint256(12098124864886236967769587776297560062691962939939632581716932675636638572540); // vk.K[509].X
        mul_input[1] = uint256(7088705999106403987374604007110542716446504583511427233954712296334658288575); // vk.K[509].Y
        mul_input[2] = input[508];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[509] * input[508]
        mul_input[0] = uint256(20021236908342452070946889557519590936507350854081445169693964977666168516856); // vk.K[510].X
        mul_input[1] = uint256(20550029630265822075749374266686417625347067723154811887522277665657083011592); // vk.K[510].Y
        mul_input[2] = input[509];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[510] * input[509]
        mul_input[0] = uint256(12631670563790624295037746821432531359702183278882243303683694172347088980156); // vk.K[511].X
        mul_input[1] = uint256(11631728124547173415708518890905094465872993168170286620596561944228328440069); // vk.K[511].Y
        mul_input[2] = input[510];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[511] * input[510]
        mul_input[0] = uint256(560795455350295621856519993328749682196500853538555350472474000564421777080); // vk.K[512].X
        mul_input[1] = uint256(21631500105538490579997788562358084250990289386444853313656306039131672686290); // vk.K[512].Y
        mul_input[2] = input[511];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[512] * input[511]
        mul_input[0] = uint256(13432113405787494564042216373616674547776279867636803208101097583168314182172); // vk.K[513].X
        mul_input[1] = uint256(14562725202041743092668397418524105739705559653613925490188885334476353073757); // vk.K[513].Y
        mul_input[2] = input[512];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[513] * input[512]
        mul_input[0] = uint256(6598082995689754743406729379571657074147385632186574171577226321840110669840); // vk.K[514].X
        mul_input[1] = uint256(20760762096618794935665511505408058704776486112503531389902355342036120817258); // vk.K[514].Y
        mul_input[2] = input[513];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[514] * input[513]
        mul_input[0] = uint256(116012534069791117038422088956039040704303324453754125464927065795154611498); // vk.K[515].X
        mul_input[1] = uint256(12324146547841199397839361285070033286552880145137010870627912214304691540785); // vk.K[515].Y
        mul_input[2] = input[514];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[515] * input[514]
        mul_input[0] = uint256(7666392721785388694183407767695582151732431262631614840144718602954250235937); // vk.K[516].X
        mul_input[1] = uint256(21321137420791814933659941657011615141379157754775154426586547644530426965499); // vk.K[516].Y
        mul_input[2] = input[515];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[516] * input[515]
        mul_input[0] = uint256(21670460088363013337570216074244498070879368572154999992840811193149523668601); // vk.K[517].X
        mul_input[1] = uint256(13511353793458142441417633061805010973220185898926304280058261863302594723600); // vk.K[517].Y
        mul_input[2] = input[516];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[517] * input[516]
        mul_input[0] = uint256(3237530626877893001221388444773174613051597889914805160706009540562489939408); // vk.K[518].X
        mul_input[1] = uint256(16380089608409841000401811779571666713315443940455823612728715264173691935895); // vk.K[518].Y
        mul_input[2] = input[517];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[518] * input[517]
        mul_input[0] = uint256(19184110390498228311654748525727768529603636243521857858192781521591428447757); // vk.K[519].X
        mul_input[1] = uint256(15132492654609091274715404767871680903319094635353314284096550208080143354209); // vk.K[519].Y
        mul_input[2] = input[518];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[519] * input[518]
        mul_input[0] = uint256(8472156450670907576129217768982525431003999156145380703604748277985526854581); // vk.K[520].X
        mul_input[1] = uint256(2094718471961955494628978970480498464176015324643249017370155241636299008347); // vk.K[520].Y
        mul_input[2] = input[519];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[520] * input[519]
        mul_input[0] = uint256(15189713384604797378520508572219335988386219833862110794462644766301869763294); // vk.K[521].X
        mul_input[1] = uint256(11466082643241044428222716401929257374091109930818888394231414269997178569700); // vk.K[521].Y
        mul_input[2] = input[520];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[521] * input[520]
        mul_input[0] = uint256(9050505293480554895701613850194858602287328966834736514465097692618752487900); // vk.K[522].X
        mul_input[1] = uint256(6333721174724338379883491725376807566227892794716992830657417503119318481309); // vk.K[522].Y
        mul_input[2] = input[521];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[522] * input[521]
        mul_input[0] = uint256(17587590850534570720153970373003197192655249490307289323175293624948583889598); // vk.K[523].X
        mul_input[1] = uint256(1098642615240401838023810864178617510997406959608579868752347969250740869102); // vk.K[523].Y
        mul_input[2] = input[522];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[523] * input[522]
        mul_input[0] = uint256(10250577589442624306413634992047767957361662597601106014217311866783881742146); // vk.K[524].X
        mul_input[1] = uint256(19222415574033470376113635641960260450862439734736751756217539825441633892155); // vk.K[524].Y
        mul_input[2] = input[523];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[524] * input[523]
        mul_input[0] = uint256(16819843609140606825511038763143030976255766164884284654268704236457709237544); // vk.K[525].X
        mul_input[1] = uint256(2595437070204582625024640356882429612093678233380593337246267433819944372134); // vk.K[525].Y
        mul_input[2] = input[524];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[525] * input[524]
        mul_input[0] = uint256(18347799434980010998181827131243593554549298787210366863461209528636828310981); // vk.K[526].X
        mul_input[1] = uint256(15126828654694509662443940839470963947000450461433352329199309114614305464458); // vk.K[526].Y
        mul_input[2] = input[525];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[526] * input[525]
        mul_input[0] = uint256(1322240755854055063896893842132404451928066411236436390311062567344512301100); // vk.K[527].X
        mul_input[1] = uint256(6696389332183538856993501310590052300948466336586842882953575821833888912378); // vk.K[527].Y
        mul_input[2] = input[526];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[527] * input[526]
        mul_input[0] = uint256(15027231755412099630675894745986237731249428877552966590404101217805020160825); // vk.K[528].X
        mul_input[1] = uint256(11202896354766119921197506955719884499276617641442804875857570028177442560648); // vk.K[528].Y
        mul_input[2] = input[527];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[528] * input[527]
        mul_input[0] = uint256(19098321796843222074591120413659435548757908762652776428372419928179365044750); // vk.K[529].X
        mul_input[1] = uint256(6337136904304893313332978974135371205418058884179947922624362511042900671926); // vk.K[529].Y
        mul_input[2] = input[528];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[529] * input[528]
        mul_input[0] = uint256(17882055800208303430756660487139878984740826152168488785595823979358661583566); // vk.K[530].X
        mul_input[1] = uint256(11194555831016193752733900829675616080957403007165598313325869360570941518883); // vk.K[530].Y
        mul_input[2] = input[529];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[530] * input[529]
        mul_input[0] = uint256(15869176854030840154190917102929277195305106640892632142633892677005565573286); // vk.K[531].X
        mul_input[1] = uint256(4930193967588283536422054014645732218967626126979694839528488816537891805748); // vk.K[531].Y
        mul_input[2] = input[530];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[531] * input[530]
        mul_input[0] = uint256(15678949404249799931953485509474908528376065745497863981771123558849756228739); // vk.K[532].X
        mul_input[1] = uint256(8104522218798561660441950932452424520079972018208023413940885297421175179946); // vk.K[532].Y
        mul_input[2] = input[531];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[532] * input[531]
        mul_input[0] = uint256(17568860878372895474304248735424024985516082961644969286845855818788332190828); // vk.K[533].X
        mul_input[1] = uint256(18642636163159482401449221136288240118435751133464245659579076944789052042529); // vk.K[533].Y
        mul_input[2] = input[532];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[533] * input[532]
        mul_input[0] = uint256(8987940636526360326809533383110095179738666950578744074385197310664132890071); // vk.K[534].X
        mul_input[1] = uint256(2541222743656254806430042221144055219612234083032060184337348646248513652106); // vk.K[534].Y
        mul_input[2] = input[533];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[534] * input[533]
        mul_input[0] = uint256(9203583171810031651777481170924716162188415761375400450921585367546736252565); // vk.K[535].X
        mul_input[1] = uint256(7923482362564766796507510021221732127585842542590197111610596901225268954009); // vk.K[535].Y
        mul_input[2] = input[534];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[535] * input[534]
        mul_input[0] = uint256(4989317486999167582869994377227302818732726174913591379460804976985545994660); // vk.K[536].X
        mul_input[1] = uint256(5597098698091990718687754272802603749300617512467723296937598192225221687728); // vk.K[536].Y
        mul_input[2] = input[535];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[536] * input[535]
        mul_input[0] = uint256(18145535126687082624709256021159196495707712247145943642252927120453953094758); // vk.K[537].X
        mul_input[1] = uint256(4207310367259324084567917370092108174367496218238515907655383523374384321648); // vk.K[537].Y
        mul_input[2] = input[536];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[537] * input[536]
        mul_input[0] = uint256(9483743000159343196264965954468136257273043256907769382806359160506354714465); // vk.K[538].X
        mul_input[1] = uint256(11461109702570622941144724383941454422735529470275037196207396667016253215189); // vk.K[538].Y
        mul_input[2] = input[537];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[538] * input[537]
        mul_input[0] = uint256(21533497985160622051398655896247099121850098591182127777003647169090575751366); // vk.K[539].X
        mul_input[1] = uint256(18240380120454978888610875818130323610217997393375272804376703344951350835996); // vk.K[539].Y
        mul_input[2] = input[538];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[539] * input[538]
        mul_input[0] = uint256(18927905107684701422491724893804936074543828902648836425552637457370974904970); // vk.K[540].X
        mul_input[1] = uint256(7632057175054961483510808957826050284473429660839681746889520364384491669889); // vk.K[540].Y
        mul_input[2] = input[539];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[540] * input[539]
        mul_input[0] = uint256(10613604492934160368363743141245894871058241938915201702388701948011480607703); // vk.K[541].X
        mul_input[1] = uint256(20231209863489394971867790177359857641298944092946207660797605053704695281853); // vk.K[541].Y
        mul_input[2] = input[540];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[541] * input[540]
        mul_input[0] = uint256(9561381334663618604229181600836544872544333373873155265299725864957154734975); // vk.K[542].X
        mul_input[1] = uint256(13541518178575956041787182256252813665972869873550134524673107809667347728813); // vk.K[542].Y
        mul_input[2] = input[541];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[542] * input[541]
        mul_input[0] = uint256(15537982521626111092721557981952283188905781043378948976361142481121621898637); // vk.K[543].X
        mul_input[1] = uint256(6562450228972435148149796435789983621619134251660541120862304697104000820423); // vk.K[543].Y
        mul_input[2] = input[542];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[543] * input[542]
        mul_input[0] = uint256(5002706758904111865918263930071849652608733293563901634883950413070407158610); // vk.K[544].X
        mul_input[1] = uint256(21328285219513972249068933220265762185813276598128659869689881900450323504634); // vk.K[544].Y
        mul_input[2] = input[543];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[544] * input[543]
        mul_input[0] = uint256(21613771847979684921620652927291532336931622918055180393271168222189709274238); // vk.K[545].X
        mul_input[1] = uint256(7088118568594816721593569640441597105793294535173158611307230439763521197916); // vk.K[545].Y
        mul_input[2] = input[544];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[545] * input[544]
        mul_input[0] = uint256(20438228100938195858140757312072099399480053131730870207032351047836437608376); // vk.K[546].X
        mul_input[1] = uint256(2615327412892143263287008215963760608840831849405287766734942512493468408718); // vk.K[546].Y
        mul_input[2] = input[545];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[546] * input[545]
        mul_input[0] = uint256(7104865618961612054948147889976653891586558357776658160956857177613504502800); // vk.K[547].X
        mul_input[1] = uint256(15139233223047364158851732915286205266982520125512311560629664562280227257387); // vk.K[547].Y
        mul_input[2] = input[546];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[547] * input[546]
        mul_input[0] = uint256(19932763102595026863383887604754812379060927075298465207215256285343113514151); // vk.K[548].X
        mul_input[1] = uint256(17450424506159040956857842733160786736597552846917865468915084983280015719774); // vk.K[548].Y
        mul_input[2] = input[547];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[548] * input[547]
        mul_input[0] = uint256(19218053053806865858019664940791967109649453896366597294337439481567499039405); // vk.K[549].X
        mul_input[1] = uint256(20315486584467532130741719503121552619703203659253193593607213404927627471819); // vk.K[549].Y
        mul_input[2] = input[548];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[549] * input[548]
        mul_input[0] = uint256(20762371849056127262635429927057385830832973036530495277114321539657688729484); // vk.K[550].X
        mul_input[1] = uint256(3360445829795616045514181884430725777313902386925376627583251782183453681489); // vk.K[550].Y
        mul_input[2] = input[549];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[550] * input[549]
        mul_input[0] = uint256(10599790648581174355709929574847773755755921276718021003107985269258981338939); // vk.K[551].X
        mul_input[1] = uint256(14664084261563374772845952793651119100512697937354830157317640312094015130223); // vk.K[551].Y
        mul_input[2] = input[550];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[551] * input[550]
        mul_input[0] = uint256(2726072517241329208839539450553456696705163327357106109724558133621707144777); // vk.K[552].X
        mul_input[1] = uint256(7859934479320983395730557917627934462388272258801322907923266380970262321245); // vk.K[552].Y
        mul_input[2] = input[551];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[552] * input[551]
        mul_input[0] = uint256(20518587702622760044325084822055232480219263319735753803632272852540964393128); // vk.K[553].X
        mul_input[1] = uint256(5740004644883687386909104207228097900217779227212725715357321567075426113997); // vk.K[553].Y
        mul_input[2] = input[552];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[553] * input[552]
        mul_input[0] = uint256(9491385571801444547034510935720393761364043989595736791225319496960280901732); // vk.K[554].X
        mul_input[1] = uint256(11227761308803548696191869442946217110960916501329838810915611366876247846929); // vk.K[554].Y
        mul_input[2] = input[553];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[554] * input[553]
        mul_input[0] = uint256(17663348492848409740096136596399350726896748201903956826236428018824805561836); // vk.K[555].X
        mul_input[1] = uint256(3650119868129262628746323004519202920633484345387881676640131112309296971866); // vk.K[555].Y
        mul_input[2] = input[554];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[555] * input[554]
        mul_input[0] = uint256(15378411759620242393586188762701685918720308940071420282371294738943810139637); // vk.K[556].X
        mul_input[1] = uint256(2259704187424890209588784357287386837955715639369529692492819882155230942904); // vk.K[556].Y
        mul_input[2] = input[555];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[556] * input[555]
        mul_input[0] = uint256(51691219676776680600656492059933722911903535905583523512462757538405261036); // vk.K[557].X
        mul_input[1] = uint256(11209442744427288774414736030511890392445359594085563715944323746940506482380); // vk.K[557].Y
        mul_input[2] = input[556];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[557] * input[556]
        mul_input[0] = uint256(17085893396432394730616235999498508744686730908022372029574881482540051081813); // vk.K[558].X
        mul_input[1] = uint256(19304853835946157844628485089428394342307031847949711903581033053665815910475); // vk.K[558].Y
        mul_input[2] = input[557];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[558] * input[557]
        mul_input[0] = uint256(4503731647790951816665872524855204197674805476186940739196552911274921483771); // vk.K[559].X
        mul_input[1] = uint256(11595151308495097004593321747942316888105476323553316768644608869766350738509); // vk.K[559].Y
        mul_input[2] = input[558];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[559] * input[558]
        mul_input[0] = uint256(20160459535122184972127848365588871518699528629928543987939479085150767797569); // vk.K[560].X
        mul_input[1] = uint256(7669560506837195289587260492978337361212721895122816723938849592888522156235); // vk.K[560].Y
        mul_input[2] = input[559];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[560] * input[559]
        mul_input[0] = uint256(8543126893022803902026903817928731784912079431056443164374395897830023487561); // vk.K[561].X
        mul_input[1] = uint256(5134689604715943757923368405991973177396860347143484802326564234920025106523); // vk.K[561].Y
        mul_input[2] = input[560];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[561] * input[560]
        mul_input[0] = uint256(14045261629420362535728137657479717386943158368762593264295960915950633523068); // vk.K[562].X
        mul_input[1] = uint256(1275814642913591156648148550633105687308379523021349019814698836097473612968); // vk.K[562].Y
        mul_input[2] = input[561];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[562] * input[561]
        mul_input[0] = uint256(5564584682293898409580631198854868022790487654098525967670794233840558412844); // vk.K[563].X
        mul_input[1] = uint256(12514397038069376526284154009047089508287752307272331249051282944954695576853); // vk.K[563].Y
        mul_input[2] = input[562];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[563] * input[562]
        mul_input[0] = uint256(9020489126335693398294021714165455722294153376539124519469344106491950585128); // vk.K[564].X
        mul_input[1] = uint256(17534197005651391714996556765754779625642354820366174392891733708844277870001); // vk.K[564].Y
        mul_input[2] = input[563];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[564] * input[563]
        mul_input[0] = uint256(7828588220583881244052786622169261905141102046949170381621667741564518422290); // vk.K[565].X
        mul_input[1] = uint256(8878798058592201201130503580169258251751885556228461362188314969502166206785); // vk.K[565].Y
        mul_input[2] = input[564];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[565] * input[564]
        mul_input[0] = uint256(9235219830300020945459708768392631191577439135403883828081513631938805220063); // vk.K[566].X
        mul_input[1] = uint256(3746349885575659777749653283650214400052485829302684889262157844312502866008); // vk.K[566].Y
        mul_input[2] = input[565];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[566] * input[565]
        mul_input[0] = uint256(9854710271809094087425370407672591311618305243467695723846372268532074783429); // vk.K[567].X
        mul_input[1] = uint256(17762908628728416131199999360358368826345512777269374387715217839511518662122); // vk.K[567].Y
        mul_input[2] = input[566];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[567] * input[566]
        mul_input[0] = uint256(18244329348807774575385735867025365767160745254259807283641435118479583861896); // vk.K[568].X
        mul_input[1] = uint256(17991118496425710535717518468987426067961442659727102085944715428620540510346); // vk.K[568].Y
        mul_input[2] = input[567];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[568] * input[567]
        mul_input[0] = uint256(632661413921292238517146526861128702141599030059517327791320352345386331072); // vk.K[569].X
        mul_input[1] = uint256(16661261092228270082057697463253232139684949449216093515315285418224073008880); // vk.K[569].Y
        mul_input[2] = input[568];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[569] * input[568]
        mul_input[0] = uint256(9782652376291722260784965606172249872009034646512187206766637762599668593767); // vk.K[570].X
        mul_input[1] = uint256(4362408142063533997242052460916308317336422954580975854271301435761905160397); // vk.K[570].Y
        mul_input[2] = input[569];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[570] * input[569]
        mul_input[0] = uint256(17345516780923306304636564184822760334852741235417587962434950345929341218293); // vk.K[571].X
        mul_input[1] = uint256(3300992679924459782747435848955765842808920527830178002887755185145426744313); // vk.K[571].Y
        mul_input[2] = input[570];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[571] * input[570]
        mul_input[0] = uint256(12140493069199799980959676086041843555492960410547448930241570048130857047895); // vk.K[572].X
        mul_input[1] = uint256(19995677325588466961148441865999522847044976379424272150238095102783054158897); // vk.K[572].Y
        mul_input[2] = input[571];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[572] * input[571]
        mul_input[0] = uint256(12625088438271750414627597341402399020362496221179314041058496712303585702125); // vk.K[573].X
        mul_input[1] = uint256(13753931394868833995049713656450673106556533525393557070687977304950906899944); // vk.K[573].Y
        mul_input[2] = input[572];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[573] * input[572]
        mul_input[0] = uint256(9623674860954876045899237148090135320670245541550598051851261482545950978552); // vk.K[574].X
        mul_input[1] = uint256(6902754916954703728406023674597679587186687681643959519716677871127265139323); // vk.K[574].Y
        mul_input[2] = input[573];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[574] * input[573]
        mul_input[0] = uint256(19040775120695760892397321398491781609552799322744942240385094509305016945069); // vk.K[575].X
        mul_input[1] = uint256(2076614986864435191399267741756903191688800604558217811100055037801648535920); // vk.K[575].Y
        mul_input[2] = input[574];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[575] * input[574]
        mul_input[0] = uint256(2947986092724489701615171869820365418135576931875869785380141286835639874640); // vk.K[576].X
        mul_input[1] = uint256(5457524181655947908829561133459082496381712695976324712059337308423993343859); // vk.K[576].Y
        mul_input[2] = input[575];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[576] * input[575]
        mul_input[0] = uint256(299330268503682840922779049503417211673610028599077200251972155535798484818); // vk.K[577].X
        mul_input[1] = uint256(12112404808968162708452953369917030442366723308130128911436216207006060137374); // vk.K[577].Y
        mul_input[2] = input[576];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[577] * input[576]
        mul_input[0] = uint256(4876238378626305824967195179468806621175329398925572802513623460220809184265); // vk.K[578].X
        mul_input[1] = uint256(10156845796345311385965139855847261464335740149600822508837901983577636460858); // vk.K[578].Y
        mul_input[2] = input[577];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[578] * input[577]
        mul_input[0] = uint256(10984976965112769135185015637162218590463090950510150761664790970170759341426); // vk.K[579].X
        mul_input[1] = uint256(1813561892889440172869408265166821997250184351168448671422358271064289373148); // vk.K[579].Y
        mul_input[2] = input[578];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[579] * input[578]
        mul_input[0] = uint256(16284953323795670767659721204445801689817477461215202303652092519655436262035); // vk.K[580].X
        mul_input[1] = uint256(8517565582757885916438225529438973021000046570261884865083512867257349985402); // vk.K[580].Y
        mul_input[2] = input[579];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[580] * input[579]
        mul_input[0] = uint256(4127637782436573121828111085994782216028495418888260220803515855192391616834); // vk.K[581].X
        mul_input[1] = uint256(12869495638200130142053568251709644643490225822865552672939922971436296267984); // vk.K[581].Y
        mul_input[2] = input[580];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[581] * input[580]
        mul_input[0] = uint256(18027328094815396589941844179749376400426625834442998084854347343764188721550); // vk.K[582].X
        mul_input[1] = uint256(13065989144624023203114324081345617738402586801435116333948561010096144384753); // vk.K[582].Y
        mul_input[2] = input[581];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[582] * input[581]
        mul_input[0] = uint256(8729899560710499190258886663913779658553329758196395529033954692807175604999); // vk.K[583].X
        mul_input[1] = uint256(4360407318745251339892614187308061480833835946161019516005160325898986002064); // vk.K[583].Y
        mul_input[2] = input[582];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[583] * input[582]
        mul_input[0] = uint256(1322028097489554743075520842979946956453421670502588496968768122463182694369); // vk.K[584].X
        mul_input[1] = uint256(14219114945906131362198045655780483477415544510703624250429988028835129310425); // vk.K[584].Y
        mul_input[2] = input[583];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[584] * input[583]
        mul_input[0] = uint256(15816884897051335668769463729247771450745707630686930090362922609164667463061); // vk.K[585].X
        mul_input[1] = uint256(1440188187841112553049832205674429700518292458486774130825194710133160714582); // vk.K[585].Y
        mul_input[2] = input[584];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[585] * input[584]
        mul_input[0] = uint256(12401098264562965390528615588441035226979709762811797578363952973193968476003); // vk.K[586].X
        mul_input[1] = uint256(8337159490947405818899348292624086708456052160559743423076163089718834258750); // vk.K[586].Y
        mul_input[2] = input[585];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[586] * input[585]
        mul_input[0] = uint256(1560671106799826176883239360490128300434453301581378088526233037070080058); // vk.K[587].X
        mul_input[1] = uint256(1962882984668866665917809773989764275267554553579253703386403140109211553138); // vk.K[587].Y
        mul_input[2] = input[586];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[587] * input[586]
        mul_input[0] = uint256(4074943312448265546519975476789295689529600605567140435084804154676440268385); // vk.K[588].X
        mul_input[1] = uint256(4575610079590648197797038002359212357362948661804503820102765203051464382696); // vk.K[588].Y
        mul_input[2] = input[587];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[588] * input[587]
        mul_input[0] = uint256(4406217786736484180702214397866462478339713918568749001084257597042335948903); // vk.K[589].X
        mul_input[1] = uint256(12651539447199705113562461186481864055797408234693972939414814940795884639898); // vk.K[589].Y
        mul_input[2] = input[588];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[589] * input[588]
        mul_input[0] = uint256(19886389115370601794432771444405201799542133889078160325993820068456719010497); // vk.K[590].X
        mul_input[1] = uint256(6312451346555550676179715931395443239944899622908468669687754086917284014937); // vk.K[590].Y
        mul_input[2] = input[589];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[590] * input[589]
        mul_input[0] = uint256(21121921324349682708475966287474038465156400124742315503349086747442403443701); // vk.K[591].X
        mul_input[1] = uint256(9351419482574742586247160991772088323431425351028676822316875690407980165305); // vk.K[591].Y
        mul_input[2] = input[590];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[591] * input[590]
        mul_input[0] = uint256(20396507127171797045999548456726415330412425722784754470324540351763630337091); // vk.K[592].X
        mul_input[1] = uint256(2722053662538381834683341417744133429073729635588814656595150446322639060195); // vk.K[592].Y
        mul_input[2] = input[591];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[592] * input[591]
        mul_input[0] = uint256(21562216273698944375124468420613388403918617397975943561759911896680102238414); // vk.K[593].X
        mul_input[1] = uint256(10383196199274120366146366636351973832534707396822690067981160385682368190223); // vk.K[593].Y
        mul_input[2] = input[592];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[593] * input[592]
        mul_input[0] = uint256(12459707750423044789535793189342855681547395893762974642760411836415831503147); // vk.K[594].X
        mul_input[1] = uint256(14028332056171419348633274010555859753922591498912707401045681777494863015085); // vk.K[594].Y
        mul_input[2] = input[593];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[594] * input[593]
        mul_input[0] = uint256(4391776645273506581508900341823725889513292548656167608593373045746596289153); // vk.K[595].X
        mul_input[1] = uint256(12529743324382168675182272146220827354875180095405169846764721413669125692173); // vk.K[595].Y
        mul_input[2] = input[594];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[595] * input[594]
        mul_input[0] = uint256(17813587074785571305209500840858568787120541311300175390948474551089512637532); // vk.K[596].X
        mul_input[1] = uint256(6525245061540888488314737839300014902550143201675348407599110513266726393526); // vk.K[596].Y
        mul_input[2] = input[595];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[596] * input[595]
        mul_input[0] = uint256(132647053003395493374062959705858842854257183094444433494029756822871052826); // vk.K[597].X
        mul_input[1] = uint256(3707916001629035932405688728001469716333851987907367696836619923668814687737); // vk.K[597].Y
        mul_input[2] = input[596];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[597] * input[596]
        mul_input[0] = uint256(3245580403175915323055772399256665200039800659571057014168123969764656008867); // vk.K[598].X
        mul_input[1] = uint256(13669545319196823327319969122896399839862498627085752122721024904514773501787); // vk.K[598].Y
        mul_input[2] = input[597];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[598] * input[597]
        mul_input[0] = uint256(19316287551894140231861929972624282120472379712099518871536799614827547057940); // vk.K[599].X
        mul_input[1] = uint256(2949106132943811107444937803714938329313356175869205229198696514583161015155); // vk.K[599].Y
        mul_input[2] = input[598];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[599] * input[598]
        mul_input[0] = uint256(476039632064163102496900837411886215332857690848618458963973283012807638046); // vk.K[600].X
        mul_input[1] = uint256(7517635011077624169588542908312075333560240237654619145995832142652677923095); // vk.K[600].Y
        mul_input[2] = input[599];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[600] * input[599]
        mul_input[0] = uint256(2005686520932569564521900919221818778313829885361941749564718001099276333449); // vk.K[601].X
        mul_input[1] = uint256(19314018298091833841708966250134045539953483370240794717578429440370954170718); // vk.K[601].Y
        mul_input[2] = input[600];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[601] * input[600]
        mul_input[0] = uint256(5174482840489381892690828819175469507689433534762570187799285507289823422296); // vk.K[602].X
        mul_input[1] = uint256(8760788571596873276171893685218620542173699286971312551230798439284816209223); // vk.K[602].Y
        mul_input[2] = input[601];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[602] * input[601]
        mul_input[0] = uint256(18563521898201471471875978172699534697513853252581815494072295971102663700582); // vk.K[603].X
        mul_input[1] = uint256(13427011861595897634350833126628746440024695662151362467004620076710280017557); // vk.K[603].Y
        mul_input[2] = input[602];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[603] * input[602]
        mul_input[0] = uint256(547214620432465119105624528537209922855363289832389823528091630257036806800); // vk.K[604].X
        mul_input[1] = uint256(5488209975848889543584056399608624395186353849716393073068396475744285209372); // vk.K[604].Y
        mul_input[2] = input[603];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[604] * input[603]
        mul_input[0] = uint256(7270856430176909123902274284043768554204290904599890003920940350367474013135); // vk.K[605].X
        mul_input[1] = uint256(14687095322915623062222935030922929167393182214476322194863845734218765841175); // vk.K[605].Y
        mul_input[2] = input[604];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[605] * input[604]
        mul_input[0] = uint256(4670572579170622978854800484077757197354755725430572656532587220132452844512); // vk.K[606].X
        mul_input[1] = uint256(19962898939587568414895877434286015352177732262956404121609042070027302767614); // vk.K[606].Y
        mul_input[2] = input[605];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[606] * input[605]
        mul_input[0] = uint256(1076026191627087698064840422467001408901681939294994438358965559382251829898); // vk.K[607].X
        mul_input[1] = uint256(13328912956761999826337321784921445739622770377991842875649154112936790968498); // vk.K[607].Y
        mul_input[2] = input[606];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[607] * input[606]
        mul_input[0] = uint256(11924704417336660110977596319006459590927196306962835548252840272465919946791); // vk.K[608].X
        mul_input[1] = uint256(11926269141071581951331809644956466387450344261817039045609134773890385721548); // vk.K[608].Y
        mul_input[2] = input[607];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[608] * input[607]
        mul_input[0] = uint256(21368216577780073740095067639094023402783837502159677129592822645148677755726); // vk.K[609].X
        mul_input[1] = uint256(17425175463397247522735336862690207174904603844984544473855140263564872797943); // vk.K[609].Y
        mul_input[2] = input[608];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[609] * input[608]
        mul_input[0] = uint256(2487911499849494769982629754376437358496257600712920611852840342960871864089); // vk.K[610].X
        mul_input[1] = uint256(20638867733280884220728016156606635110220135885956436776190006375576351805353); // vk.K[610].Y
        mul_input[2] = input[609];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[610] * input[609]
        mul_input[0] = uint256(573978038552737255231224336548840048675057651551392217841448859059725832967); // vk.K[611].X
        mul_input[1] = uint256(18584651219167842846060619962829519155246419338092468898277593989950194134859); // vk.K[611].Y
        mul_input[2] = input[610];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[611] * input[610]
        mul_input[0] = uint256(18447672358630823253135642366501173160311853136049547790555278520959177606520); // vk.K[612].X
        mul_input[1] = uint256(16967835039553682804951799538374748756428304923530989578379119339594038230470); // vk.K[612].Y
        mul_input[2] = input[611];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[612] * input[611]
        mul_input[0] = uint256(8269131068134362725713912106900171621402700217152696220414181875881517255293); // vk.K[613].X
        mul_input[1] = uint256(1279845593631464835637814773537998672860134768803160283776031200778302577226); // vk.K[613].Y
        mul_input[2] = input[612];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[613] * input[612]
        mul_input[0] = uint256(2937650919504309265418464011054421884474641021102769008578907914379834298093); // vk.K[614].X
        mul_input[1] = uint256(6611913896998119013278329113895213642324514595702759859484883727634801763641); // vk.K[614].Y
        mul_input[2] = input[613];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[614] * input[613]
        mul_input[0] = uint256(2391884799533044679366394114787146880656547588993591779882275346750527351325); // vk.K[615].X
        mul_input[1] = uint256(5645711865060736974191053512011804808267440136136057574329781131254985191092); // vk.K[615].Y
        mul_input[2] = input[614];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[615] * input[614]
        mul_input[0] = uint256(14479127096317458113983216525747167117822226080564804298705880543676067981308); // vk.K[616].X
        mul_input[1] = uint256(8638535888569698116926217725285888712758380301811443560991255788347789089473); // vk.K[616].Y
        mul_input[2] = input[615];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[616] * input[615]
        mul_input[0] = uint256(9173874498756927143359161040939926404370492925948497587234337387901843042411); // vk.K[617].X
        mul_input[1] = uint256(7460945534065511003306218464429643923366555116764197475145785652101125086367); // vk.K[617].Y
        mul_input[2] = input[616];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[617] * input[616]
        mul_input[0] = uint256(19509549150174605058392214112624534991735766457083693711972461884245391921352); // vk.K[618].X
        mul_input[1] = uint256(225833570649568439386955920111557170116881131380296846904469266926348594070); // vk.K[618].Y
        mul_input[2] = input[617];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[618] * input[617]
        mul_input[0] = uint256(15472383608469247560323086565679982459089408885714613164939899612808464698910); // vk.K[619].X
        mul_input[1] = uint256(14815876360945189922616663984446488612354375417217266130426873037504892102483); // vk.K[619].Y
        mul_input[2] = input[618];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[619] * input[618]
        mul_input[0] = uint256(15055928449356586475513677353545935038737763949996261433356010242538993627018); // vk.K[620].X
        mul_input[1] = uint256(233905246872075618377088488827398840762005619666666505795221514853235869753); // vk.K[620].Y
        mul_input[2] = input[619];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[620] * input[619]
        mul_input[0] = uint256(16147711573014276215348656634395799635529614336381306876578962595853411875165); // vk.K[621].X
        mul_input[1] = uint256(18818191784683369013439487586533144954502634408523964148911600133541156378825); // vk.K[621].Y
        mul_input[2] = input[620];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[621] * input[620]
        mul_input[0] = uint256(14996058067909357010893153412502516284749638517008032838288746828699247935558); // vk.K[622].X
        mul_input[1] = uint256(15976312710292006522158756112145149453772270329326309772966433259850848645668); // vk.K[622].Y
        mul_input[2] = input[621];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[622] * input[621]
        mul_input[0] = uint256(10144530563313004262737441109712726133595618957471403596918179776109318622571); // vk.K[623].X
        mul_input[1] = uint256(11123415160488882642316724830821465085028907492316643151686773275108508376075); // vk.K[623].Y
        mul_input[2] = input[622];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[623] * input[622]
        mul_input[0] = uint256(2295036910982394896172229512681463210517959019280838999492701325553930897275); // vk.K[624].X
        mul_input[1] = uint256(14325942346039817885302307590251270924376897429536690828171370483253755654549); // vk.K[624].Y
        mul_input[2] = input[623];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[624] * input[623]
        mul_input[0] = uint256(19409894720669521669653334780075250387394424828750723219519600767394206710352); // vk.K[625].X
        mul_input[1] = uint256(7829164041097074259207518577474646545854290765199276812837684975297920894982); // vk.K[625].Y
        mul_input[2] = input[624];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[625] * input[624]
        mul_input[0] = uint256(21121687102612516253308259552285351309003683235009422760197155427665370483891); // vk.K[626].X
        mul_input[1] = uint256(21634497423560980685876372445362793322187338979712907800144449228191920088752); // vk.K[626].Y
        mul_input[2] = input[625];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[626] * input[625]
        mul_input[0] = uint256(21190473246807690201244617026358026222169401530105082324247117414348950151122); // vk.K[627].X
        mul_input[1] = uint256(16768957915041200019538385932793834208322578788883519580146274297602823209814); // vk.K[627].Y
        mul_input[2] = input[626];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[627] * input[626]
        mul_input[0] = uint256(11134551133921450403262509139410097868197305681201483264334069149292542266994); // vk.K[628].X
        mul_input[1] = uint256(1382890198715428406042033957729225064900180509016138864957740099577576731468); // vk.K[628].Y
        mul_input[2] = input[627];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[628] * input[627]
        mul_input[0] = uint256(14198415022835190019041005245445798867411625045918591291560809694738891421688); // vk.K[629].X
        mul_input[1] = uint256(1284249163093867759922617459241482132278847975992713144546822670247642302972); // vk.K[629].Y
        mul_input[2] = input[628];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[629] * input[628]
        mul_input[0] = uint256(1617962560663840517524966626646324323710321549446314532451816760269381155041); // vk.K[630].X
        mul_input[1] = uint256(899787137301164839429303234754105768952448898695963515390031813125689218132); // vk.K[630].Y
        mul_input[2] = input[629];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[630] * input[629]
        mul_input[0] = uint256(1644876005452518784514959445975515090595914577131740501417886062651039405576); // vk.K[631].X
        mul_input[1] = uint256(1107667254661969882655337006953467126219955570588946801600236159928190392246); // vk.K[631].Y
        mul_input[2] = input[630];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[631] * input[630]
        mul_input[0] = uint256(15976942482617740953105916586062912958831971344160635673844234664170620437621); // vk.K[632].X
        mul_input[1] = uint256(7416399617450002952052849386982808996204371196435115477667166020122464948009); // vk.K[632].Y
        mul_input[2] = input[631];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[632] * input[631]
        mul_input[0] = uint256(18103101714645576095362215459145974691071687844505244558414515881854825128059); // vk.K[633].X
        mul_input[1] = uint256(12761910634703146408797488948895219826491606753889971939899756516723067299691); // vk.K[633].Y
        mul_input[2] = input[632];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[633] * input[632]
        mul_input[0] = uint256(7544359299737263413098004562560334116665633191234411155245585486671334838729); // vk.K[634].X
        mul_input[1] = uint256(14556787375020584544224140887268999015090889106344181054198423981534105073013); // vk.K[634].Y
        mul_input[2] = input[633];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[634] * input[633]
        mul_input[0] = uint256(5265098299046296342943725084481652437359227255705046394166922454116780999480); // vk.K[635].X
        mul_input[1] = uint256(6025777361685711262345558001503167572805711996750373269193948014398114278526); // vk.K[635].Y
        mul_input[2] = input[634];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[635] * input[634]
        mul_input[0] = uint256(6425961885697294901044384371719219263826215815453023723134098735102511677779); // vk.K[636].X
        mul_input[1] = uint256(16800011092468023564817770573482554828185830715198011327006939993631830140201); // vk.K[636].Y
        mul_input[2] = input[635];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[636] * input[635]
        mul_input[0] = uint256(12440746372600870096604081391984278932498840468959404830978923099523473167259); // vk.K[637].X
        mul_input[1] = uint256(2051593076325850165577036573459539436537922356674172303926923741073251909056); // vk.K[637].Y
        mul_input[2] = input[636];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[637] * input[636]
        mul_input[0] = uint256(8028685895800280108042607600553897793081968455856158671425457733023189921191); // vk.K[638].X
        mul_input[1] = uint256(21138327897135580847675266858142399454183671916381768461057312170367259554771); // vk.K[638].Y
        mul_input[2] = input[637];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[638] * input[637]
        mul_input[0] = uint256(18161276382153478096062666919667726618114734947557971655646187009683253276501); // vk.K[639].X
        mul_input[1] = uint256(16110272406002968121603016011083044808105706970760338588530619506500808268132); // vk.K[639].Y
        mul_input[2] = input[638];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[639] * input[638]
        mul_input[0] = uint256(11043600818375534460151928888132525314921390481649853738587584562146291444496); // vk.K[640].X
        mul_input[1] = uint256(15157417778786693025640925211111298599128037896632766288168701864942707470003); // vk.K[640].Y
        mul_input[2] = input[639];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[640] * input[639]
        mul_input[0] = uint256(15041304456622897248863348422412843569616209783911079327603729974699149914564); // vk.K[641].X
        mul_input[1] = uint256(1031081459019607819820859740155308044880655395603867185729207255043159118699); // vk.K[641].Y
        mul_input[2] = input[640];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[641] * input[640]
        mul_input[0] = uint256(11478850688080229911094421730956307694660524013334932717761353340897472193664); // vk.K[642].X
        mul_input[1] = uint256(17252923189777207419928417108594361513044307373773467213650212337063015785445); // vk.K[642].Y
        mul_input[2] = input[641];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[642] * input[641]
        mul_input[0] = uint256(10050540346091664341208854702504712916361512585970341972592026268674150890159); // vk.K[643].X
        mul_input[1] = uint256(3101937970242323194647232125599718065845100164620464782274681523492572982363); // vk.K[643].Y
        mul_input[2] = input[642];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[643] * input[642]
        mul_input[0] = uint256(16589797751215523162411398307889442885744231490254927254084108229219508633152); // vk.K[644].X
        mul_input[1] = uint256(21502118024032829405495645689033574950690362994271213238405983954652803419011); // vk.K[644].Y
        mul_input[2] = input[643];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[644] * input[643]
        mul_input[0] = uint256(11590988422177051186580372745188121903853433382551164265254052212808463512849); // vk.K[645].X
        mul_input[1] = uint256(1726766462270432677420661105629620860610287826684524394753810335714993526684); // vk.K[645].Y
        mul_input[2] = input[644];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[645] * input[644]
        mul_input[0] = uint256(13807772466718349163068402801885345184927008576620565357634936609433551504295); // vk.K[646].X
        mul_input[1] = uint256(11697877609188218026646162167829086274593149825435992059772369411961127274326); // vk.K[646].Y
        mul_input[2] = input[645];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[646] * input[645]
        mul_input[0] = uint256(16029829643469911941101830707849102585109860665648149077644960982995821236735); // vk.K[647].X
        mul_input[1] = uint256(895119266063176039165015688842846453817167654665523949627528411982328475491); // vk.K[647].Y
        mul_input[2] = input[646];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[647] * input[646]
        mul_input[0] = uint256(17366019624406120906981251010270391801258058504774240570784307190428925377836); // vk.K[648].X
        mul_input[1] = uint256(15180732245430334060538315380842584882640417970200254574352037673250264589595); // vk.K[648].Y
        mul_input[2] = input[647];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[648] * input[647]
        mul_input[0] = uint256(3881064805902821129144040364980204301646373691567971805095744106565550060795); // vk.K[649].X
        mul_input[1] = uint256(15723823704255487915620726743756637907088542527532149621716854323630147449531); // vk.K[649].Y
        mul_input[2] = input[648];
        accumulate(mul_input, q, add_input, vk_x); // vk_x += vk.K[649] * input[648]

        return Pairing.pairing(
            Pairing.negate(proof.A),
            proof.B,
            vk.alfa1,
            vk.beta2,
            vk_x,
            vk.gamma2,
            proof.C,
            vk.delta2
        );
    }
}
