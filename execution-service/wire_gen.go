// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"execution-service/adapter"
	"execution-service/execution"
	"execution-service/instance"
	"execution-service/model"
	"execution-service/proof"
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
)

// Injectors from main.go:

func InitializeInstanceController() instance.InstanceController {
	instanceService := instance.NewInstanceService()
	instanceController := instance.NewInstanceController(instanceService)
	return instanceController
}

func InitializeModelController() model.ModelController {
	modelAdapter := adapter.NewModelAdapter()
	modelService := model.NewModelService(modelAdapter)
	modelController := model.NewModelController(modelService)
	return modelController
}

func InitializeExecutionController() execution.ExecutionController {
	modelAdapter := adapter.NewModelAdapter()
	executionService := execution.InitializeExecutionService(modelAdapter)
	executionController := execution.NewExecutionController(executionService)
	return executionController
}

func InitializeProofController() proof.ProofController {
	modelAdapter := adapter.NewModelAdapter()
	proofService := proof.InitializeProofService(modelAdapter)
	proofController := proof.NewProofController(proofService)
	return proofController
}

// main.go:

var instanceProviders = wire.NewSet(instance.NewInstanceController, instance.NewInstanceService)

var providerBindings = wire.NewSet(adapter.NewModelAdapter, wire.Bind(new(model.ModelPort), new(*adapter.ModelAdapter)))

var modelProviders = wire.NewSet(proofProviders, model.NewModelController, model.NewModelService)

var executionProviders = wire.NewSet(providerBindings, execution.NewExecutionController, execution.InitializeExecutionService)

var proofProviders = wire.NewSet(providerBindings, proof.NewProofController, proof.InitializeProofService)

func main() {

	instanceController := InitializeInstanceController()
	modelController := InitializeModelController()
	executionController := InitializeExecutionController()
	proofController := InitializeProofController()

	router := gin.Default()
	router.GET("/models/:modelId", modelController.GetModel)
	router.GET("/models/:modelId/instances", instanceController.GetInstances)
	router.GET("/models/:modelId/instances/:instanceId", instanceController.GetInstance)
	router.POST("/models/:modelId/instances", executionController.InstantiateModel)
	router.POST("/models/:modelId/instances/:instanceId", executionController.ExecuteTransition)
	router.PUT("/instantiation-proof", proofController.ProveInstantiation)
	router.PUT("/transition-proof", proofController.ProveTransition)
	router.PUT("/termination-proof", proofController.ProveTermination)

	router.Run("localhost:8080")
}
